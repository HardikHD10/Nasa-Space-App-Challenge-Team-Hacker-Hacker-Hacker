{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP79ISlGlDpb1BUG6/2gZD6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QsjHqoTDllj9","executionInfo":{"status":"ok","timestamp":1696733211674,"user_tz":-330,"elapsed":27344,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"2c988197-7bf6-4d01-cbcb-1e7525e79148"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# Loading Datasets"],"metadata":{"id":"hficWYSHpPRn"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"Q-25kD-klm6W","executionInfo":{"status":"ok","timestamp":1696733228135,"user_tz":-330,"elapsed":21,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Reloading the data without setting any column as the index\n","data = pd.read_csv(\"/content/drive/MyDrive/NASA Hackathon/Datasets/Intial Datasets/rtsw_plot_data_2019-05-03T16_00_00.txt\", delim_whitespace=True, header=0, index_col=None)"],"metadata":{"id":"_Xy6_O1h7a8T","executionInfo":{"status":"ok","timestamp":1696733228135,"user_tz":-330,"elapsed":20,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Resetting the index and combining the index (which has the date) and the \"Timestamp\" column (which has the time) into a single column\n","data[\"Timestamp\"] = data.index + \" \" + data[\"Timestamp\"]\n","\n","# Resetting the index to default integers\n","data = data.reset_index(drop=True)\n","\n","# Displaying the first few rows of the adjusted DataFrame\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":360},"id":"U-JB917j7G3s","executionInfo":{"status":"ok","timestamp":1696733228136,"user_tz":-330,"elapsed":21,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"d27de18c-1908-410d-8888-00750ecd9906"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0  2019-05-04 00:00:00       1    4.35    2.24   11.02    2.11   -4.73   \n","1  2019-05-05 00:00:00       1    3.46    1.62    4.20    1.86   -3.46   \n","2  2019-05-06 00:00:00       1    4.01    2.73    5.13    1.86   -2.55   \n","3  2019-05-07 00:00:00       1    3.73    1.28    4.70    2.13   -1.02   \n","4  2019-05-08 00:00:00       1    2.62    0.86    3.37    2.18    0.59   \n","\n","   Bx-max  By-med  By-min  ...  Theta-max  Dens-med  Dens-min  Dens-max  \\\n","0   10.15   -1.58   -7.00  ...      62.22      6.87      3.50      9.10   \n","1    3.93   -1.51   -3.62  ...      65.63      4.22      1.27      5.85   \n","2    4.80   -2.31   -4.59  ...      66.19      4.46      2.11      7.36   \n","3    3.94   -0.70   -4.21  ...      53.41      4.70      2.37     11.02   \n","4    3.09   -0.03   -1.08  ...      54.93      9.84      8.17     16.65   \n","\n","   Speed-med  Speed-min  Speed-max  Temp-med  Temp-min  Temp-max  \n","0      482.0      391.5      515.4    179360     55436    303319  \n","1      434.4      359.7      494.9    122091     25719    334905  \n","2      374.0      322.5      392.8     43075     12791     75843  \n","3      351.9      327.4      382.2     29746     11704     55111  \n","4      326.4      307.4      341.5     12476      7815     16210  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-f1736f5b-47fa-4370-845f-ed2f67d7f392\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Theta-max</th>\n","      <th>Dens-med</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-05-04 00:00:00</td>\n","      <td>1</td>\n","      <td>4.35</td>\n","      <td>2.24</td>\n","      <td>11.02</td>\n","      <td>2.11</td>\n","      <td>-4.73</td>\n","      <td>10.15</td>\n","      <td>-1.58</td>\n","      <td>-7.00</td>\n","      <td>...</td>\n","      <td>62.22</td>\n","      <td>6.87</td>\n","      <td>3.50</td>\n","      <td>9.10</td>\n","      <td>482.0</td>\n","      <td>391.5</td>\n","      <td>515.4</td>\n","      <td>179360</td>\n","      <td>55436</td>\n","      <td>303319</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-05 00:00:00</td>\n","      <td>1</td>\n","      <td>3.46</td>\n","      <td>1.62</td>\n","      <td>4.20</td>\n","      <td>1.86</td>\n","      <td>-3.46</td>\n","      <td>3.93</td>\n","      <td>-1.51</td>\n","      <td>-3.62</td>\n","      <td>...</td>\n","      <td>65.63</td>\n","      <td>4.22</td>\n","      <td>1.27</td>\n","      <td>5.85</td>\n","      <td>434.4</td>\n","      <td>359.7</td>\n","      <td>494.9</td>\n","      <td>122091</td>\n","      <td>25719</td>\n","      <td>334905</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-05-06 00:00:00</td>\n","      <td>1</td>\n","      <td>4.01</td>\n","      <td>2.73</td>\n","      <td>5.13</td>\n","      <td>1.86</td>\n","      <td>-2.55</td>\n","      <td>4.80</td>\n","      <td>-2.31</td>\n","      <td>-4.59</td>\n","      <td>...</td>\n","      <td>66.19</td>\n","      <td>4.46</td>\n","      <td>2.11</td>\n","      <td>7.36</td>\n","      <td>374.0</td>\n","      <td>322.5</td>\n","      <td>392.8</td>\n","      <td>43075</td>\n","      <td>12791</td>\n","      <td>75843</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-07 00:00:00</td>\n","      <td>1</td>\n","      <td>3.73</td>\n","      <td>1.28</td>\n","      <td>4.70</td>\n","      <td>2.13</td>\n","      <td>-1.02</td>\n","      <td>3.94</td>\n","      <td>-0.70</td>\n","      <td>-4.21</td>\n","      <td>...</td>\n","      <td>53.41</td>\n","      <td>4.70</td>\n","      <td>2.37</td>\n","      <td>11.02</td>\n","      <td>351.9</td>\n","      <td>327.4</td>\n","      <td>382.2</td>\n","      <td>29746</td>\n","      <td>11704</td>\n","      <td>55111</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-05-08 00:00:00</td>\n","      <td>1</td>\n","      <td>2.62</td>\n","      <td>0.86</td>\n","      <td>3.37</td>\n","      <td>2.18</td>\n","      <td>0.59</td>\n","      <td>3.09</td>\n","      <td>-0.03</td>\n","      <td>-1.08</td>\n","      <td>...</td>\n","      <td>54.93</td>\n","      <td>9.84</td>\n","      <td>8.17</td>\n","      <td>16.65</td>\n","      <td>326.4</td>\n","      <td>307.4</td>\n","      <td>341.5</td>\n","      <td>12476</td>\n","      <td>7815</td>\n","      <td>16210</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1736f5b-47fa-4370-845f-ed2f67d7f392')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f1736f5b-47fa-4370-845f-ed2f67d7f392 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f1736f5b-47fa-4370-845f-ed2f67d7f392');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-41f7721c-88a9-431a-86de-95d3f16e1a19\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41f7721c-88a9-431a-86de-95d3f16e1a19')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-41f7721c-88a9-431a-86de-95d3f16e1a19 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Function to load and format the data\n","def load_and_format_data(file_path):\n","    df = pd.read_csv(file_path, delim_whitespace=True, header=0, index_col=None)\n","    df[\"Timestamp\"] = df.index + \" \" + df[\"Timestamp\"]\n","    df = df.reset_index(drop=True)\n","    return df\n","\n","# Loading the two datasets\n","data1 = load_and_format_data(\"/content/drive/MyDrive/NASA Hackathon/Datasets/Intial Datasets/rtsw_plot_data_2023-08-17T00_00_00.txt\")\n","data2 = load_and_format_data(\"/content/drive/MyDrive/NASA Hackathon/Datasets/Intial Datasets/rtsw_plot_data_2022-10-31T10_00_00.txt\")\n","\n","# Displaying the first few rows of each dataset\n","data1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":360},"id":"TcN1ycKN8Ikl","executionInfo":{"status":"ok","timestamp":1696733228136,"user_tz":-330,"elapsed":19,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"a66e99e5-feeb-4b88-920c-61f8c86b56f9"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0  2023-08-17 00:00:00       1    7.89    7.21    8.66   -0.52   -3.56   \n","1  2023-08-17 01:00:00       1    7.44    6.78    8.34   -2.78   -3.86   \n","2  2023-08-17 02:00:00       1    5.86    5.41    7.00   -1.94   -3.24   \n","3  2023-08-17 03:00:00       1    6.40    4.40    7.56   -0.84   -4.08   \n","4  2023-08-17 04:00:00       1    7.24    5.17    7.67   -1.80   -2.70   \n","\n","   Bx-max  By-med  By-min  ...  Theta-max  Dens-med  Dens-min  Dens-max  \\\n","0    0.57    7.14    6.02  ...      28.41      9.68      7.61     11.18   \n","1   -0.63    6.98    5.63  ...      20.17     11.20      8.50     13.24   \n","2   -0.14    5.28    4.35  ...       7.83     13.02      8.87     13.75   \n","3    3.91    5.01    2.13  ...      52.59      7.60      6.12      9.70   \n","4   -1.09    6.36    4.34  ...     -12.49      6.49      5.58      7.61   \n","\n","   Speed-med  Speed-min  Speed-max  Temp-med  Temp-min  Temp-max  \n","0      304.7      303.7      315.4     16786     12124     19425  \n","1      313.1      311.4      316.8     12555     10256     16625  \n","2      314.2      307.2      322.6     17006     14398     27957  \n","3      314.3      298.8      317.2     28372     20008     40698  \n","4      318.7      313.6      326.3     20563     16439     25790  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-d550eeff-5d90-48a7-9001-f450228eae4c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Theta-max</th>\n","      <th>Dens-med</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-08-17 00:00:00</td>\n","      <td>1</td>\n","      <td>7.89</td>\n","      <td>7.21</td>\n","      <td>8.66</td>\n","      <td>-0.52</td>\n","      <td>-3.56</td>\n","      <td>0.57</td>\n","      <td>7.14</td>\n","      <td>6.02</td>\n","      <td>...</td>\n","      <td>28.41</td>\n","      <td>9.68</td>\n","      <td>7.61</td>\n","      <td>11.18</td>\n","      <td>304.7</td>\n","      <td>303.7</td>\n","      <td>315.4</td>\n","      <td>16786</td>\n","      <td>12124</td>\n","      <td>19425</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-08-17 01:00:00</td>\n","      <td>1</td>\n","      <td>7.44</td>\n","      <td>6.78</td>\n","      <td>8.34</td>\n","      <td>-2.78</td>\n","      <td>-3.86</td>\n","      <td>-0.63</td>\n","      <td>6.98</td>\n","      <td>5.63</td>\n","      <td>...</td>\n","      <td>20.17</td>\n","      <td>11.20</td>\n","      <td>8.50</td>\n","      <td>13.24</td>\n","      <td>313.1</td>\n","      <td>311.4</td>\n","      <td>316.8</td>\n","      <td>12555</td>\n","      <td>10256</td>\n","      <td>16625</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-08-17 02:00:00</td>\n","      <td>1</td>\n","      <td>5.86</td>\n","      <td>5.41</td>\n","      <td>7.00</td>\n","      <td>-1.94</td>\n","      <td>-3.24</td>\n","      <td>-0.14</td>\n","      <td>5.28</td>\n","      <td>4.35</td>\n","      <td>...</td>\n","      <td>7.83</td>\n","      <td>13.02</td>\n","      <td>8.87</td>\n","      <td>13.75</td>\n","      <td>314.2</td>\n","      <td>307.2</td>\n","      <td>322.6</td>\n","      <td>17006</td>\n","      <td>14398</td>\n","      <td>27957</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-08-17 03:00:00</td>\n","      <td>1</td>\n","      <td>6.40</td>\n","      <td>4.40</td>\n","      <td>7.56</td>\n","      <td>-0.84</td>\n","      <td>-4.08</td>\n","      <td>3.91</td>\n","      <td>5.01</td>\n","      <td>2.13</td>\n","      <td>...</td>\n","      <td>52.59</td>\n","      <td>7.60</td>\n","      <td>6.12</td>\n","      <td>9.70</td>\n","      <td>314.3</td>\n","      <td>298.8</td>\n","      <td>317.2</td>\n","      <td>28372</td>\n","      <td>20008</td>\n","      <td>40698</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-08-17 04:00:00</td>\n","      <td>1</td>\n","      <td>7.24</td>\n","      <td>5.17</td>\n","      <td>7.67</td>\n","      <td>-1.80</td>\n","      <td>-2.70</td>\n","      <td>-1.09</td>\n","      <td>6.36</td>\n","      <td>4.34</td>\n","      <td>...</td>\n","      <td>-12.49</td>\n","      <td>6.49</td>\n","      <td>5.58</td>\n","      <td>7.61</td>\n","      <td>318.7</td>\n","      <td>313.6</td>\n","      <td>326.3</td>\n","      <td>20563</td>\n","      <td>16439</td>\n","      <td>25790</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d550eeff-5d90-48a7-9001-f450228eae4c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d550eeff-5d90-48a7-9001-f450228eae4c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d550eeff-5d90-48a7-9001-f450228eae4c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5580496a-ec4e-494e-8be0-ba91c0c77323\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5580496a-ec4e-494e-8be0-ba91c0c77323')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5580496a-ec4e-494e-8be0-ba91c0c77323 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":[" data2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":360},"id":"4y-aRmzq8S_i","executionInfo":{"status":"ok","timestamp":1696733228136,"user_tz":-330,"elapsed":18,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"c9ea54a1-4916-4fac-fc8a-ae105933e21e"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0  2022-10-31 12:00:00       1    4.96    3.41    5.55    1.45   -2.51   \n","1  2022-10-31 18:00:00       1    4.89    3.58    6.40   -0.49   -3.86   \n","2  2022-11-01 00:00:00       1    4.66    3.25    5.14   -3.18   -4.66   \n","3  2022-11-01 06:00:00       1    4.03    2.52    5.09   -0.49   -3.71   \n","4  2022-11-01 12:00:00       1    4.50    3.40    4.78   -3.32   -4.49   \n","\n","   Bx-max  By-med  By-min  ...  Theta-max  Dens-med  Dens-min  Dens-max  \\\n","0    3.03    2.80   -4.01  ...      -8.52      9.77      6.08     10.79   \n","1    4.89    3.92    0.39  ...      44.38     10.04      6.29     11.21   \n","2    4.58    0.81   -1.46  ...      63.67      8.18      5.43     11.14   \n","3    3.32    1.84   -1.97  ...      37.08      7.97      4.47     10.04   \n","4    2.84    2.00   -1.37  ...      31.41      4.61      3.72      5.16   \n","\n","   Speed-med  Speed-min  Speed-max  Temp-med  Temp-min  Temp-max  \n","0      479.4      457.2      497.0    255620    119723    306989  \n","1      471.7      450.3      502.4    246035    123225    291427  \n","2      462.3      442.9      488.5    202911     98993    329715  \n","3      462.1      427.5      483.6    222950     94413    307277  \n","4      430.3      412.7      437.3     96466     65622    126397  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-30b81886-6c39-4cd1-8732-efff8e2f89d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Theta-max</th>\n","      <th>Dens-med</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-10-31 12:00:00</td>\n","      <td>1</td>\n","      <td>4.96</td>\n","      <td>3.41</td>\n","      <td>5.55</td>\n","      <td>1.45</td>\n","      <td>-2.51</td>\n","      <td>3.03</td>\n","      <td>2.80</td>\n","      <td>-4.01</td>\n","      <td>...</td>\n","      <td>-8.52</td>\n","      <td>9.77</td>\n","      <td>6.08</td>\n","      <td>10.79</td>\n","      <td>479.4</td>\n","      <td>457.2</td>\n","      <td>497.0</td>\n","      <td>255620</td>\n","      <td>119723</td>\n","      <td>306989</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-10-31 18:00:00</td>\n","      <td>1</td>\n","      <td>4.89</td>\n","      <td>3.58</td>\n","      <td>6.40</td>\n","      <td>-0.49</td>\n","      <td>-3.86</td>\n","      <td>4.89</td>\n","      <td>3.92</td>\n","      <td>0.39</td>\n","      <td>...</td>\n","      <td>44.38</td>\n","      <td>10.04</td>\n","      <td>6.29</td>\n","      <td>11.21</td>\n","      <td>471.7</td>\n","      <td>450.3</td>\n","      <td>502.4</td>\n","      <td>246035</td>\n","      <td>123225</td>\n","      <td>291427</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-11-01 00:00:00</td>\n","      <td>1</td>\n","      <td>4.66</td>\n","      <td>3.25</td>\n","      <td>5.14</td>\n","      <td>-3.18</td>\n","      <td>-4.66</td>\n","      <td>4.58</td>\n","      <td>0.81</td>\n","      <td>-1.46</td>\n","      <td>...</td>\n","      <td>63.67</td>\n","      <td>8.18</td>\n","      <td>5.43</td>\n","      <td>11.14</td>\n","      <td>462.3</td>\n","      <td>442.9</td>\n","      <td>488.5</td>\n","      <td>202911</td>\n","      <td>98993</td>\n","      <td>329715</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-11-01 06:00:00</td>\n","      <td>1</td>\n","      <td>4.03</td>\n","      <td>2.52</td>\n","      <td>5.09</td>\n","      <td>-0.49</td>\n","      <td>-3.71</td>\n","      <td>3.32</td>\n","      <td>1.84</td>\n","      <td>-1.97</td>\n","      <td>...</td>\n","      <td>37.08</td>\n","      <td>7.97</td>\n","      <td>4.47</td>\n","      <td>10.04</td>\n","      <td>462.1</td>\n","      <td>427.5</td>\n","      <td>483.6</td>\n","      <td>222950</td>\n","      <td>94413</td>\n","      <td>307277</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-11-01 12:00:00</td>\n","      <td>1</td>\n","      <td>4.50</td>\n","      <td>3.40</td>\n","      <td>4.78</td>\n","      <td>-3.32</td>\n","      <td>-4.49</td>\n","      <td>2.84</td>\n","      <td>2.00</td>\n","      <td>-1.37</td>\n","      <td>...</td>\n","      <td>31.41</td>\n","      <td>4.61</td>\n","      <td>3.72</td>\n","      <td>5.16</td>\n","      <td>430.3</td>\n","      <td>412.7</td>\n","      <td>437.3</td>\n","      <td>96466</td>\n","      <td>65622</td>\n","      <td>126397</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30b81886-6c39-4cd1-8732-efff8e2f89d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30b81886-6c39-4cd1-8732-efff8e2f89d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30b81886-6c39-4cd1-8732-efff8e2f89d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ebea54fb-d1b1-4881-9569-8a0b133275c2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ebea54fb-d1b1-4881-9569-8a0b133275c2')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ebea54fb-d1b1-4881-9569-8a0b133275c2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["data4 = pd.read_csv(\"/content/drive/MyDrive/NASA Hackathon/Datasets/Intial Datasets/www-app3.gfz-potsdam.de_kp_index_Kp_ap_Ap_SN_F107_since_1932.txt\", delim_whitespace=True)"],"metadata":{"id":"hJNSxgzmNrbU","executionInfo":{"status":"ok","timestamp":1696733228136,"user_tz":-330,"elapsed":17,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["data4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"UYL9jcK1N3XY","executionInfo":{"status":"ok","timestamp":1696733228136,"user_tz":-330,"elapsed":17,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"1045132a-09df-4f30-a555-2a4091d6ec9f"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        YYY  MM  DD   days   days_m   Bsr  dB    Kp1    Kp2    Kp3  ...  ap4  \\\n","0      1932   1   1      0      0.5  1352  10  3.333  2.667  2.333  ...   12   \n","1      1932   1   2      1      1.5  1352  11  3.667  3.667  3.333  ...   22   \n","2      1932   1   3      2      2.5  1352  12  3.333  3.333  3.000  ...    4   \n","3      1932   1   4      3      3.5  1352  13  2.000  0.333  1.000  ...    0   \n","4      1932   1   5      4      4.5  1352  14  0.000  0.000  0.333  ...    3   \n","...     ...  ..  ..    ...      ...   ...  ..    ...    ...    ...  ...  ...   \n","33512  2023  10   2  33512  33512.5  2593  15  3.000  3.333  1.000  ...    5   \n","33513  2023  10   3  33513  33513.5  2593  16  1.000  2.333  1.333  ...    4   \n","33514  2023  10   4  33514  33514.5  2593  17  3.000  2.333  2.333  ...    7   \n","33515  2023  10   5  33515  33515.5  2593  18  4.333  5.000  2.333  ...   15   \n","33516  2023  10   6  33516  33516.5  2593  19  2.000  2.333  2.000  ...    5   \n","\n","       ap5  ap6  ap7  ap8  Ap   SN  F10.7obs  F10.7adj  D  \n","0       18   12   18   18  15   22      -1.0      -1.0  2  \n","1       18   39   15   48  26   43      -1.0      -1.0  2  \n","2        9    6   12    7  11   23      -1.0      -1.0  2  \n","3        4    5    5    4   4   13      -1.0      -1.0  2  \n","4        2    5    5    7   3   13      -1.0      -1.0  2  \n","...    ...  ...  ...  ...  ..  ...       ...       ... ..  \n","33512    6    5    5    9   8  173     157.4     157.7  0  \n","33513    7    7    7    7   6  148     153.7     153.8  0  \n","33514    6    5    7   22  10  159     155.0     155.1  0  \n","33515    6    3    3    9  16  169     156.1     156.1  0  \n","33516    4    5    3   15   7  152     155.3     155.3  0  \n","\n","[33517 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-0a0f47bd-4f4b-49f0-a30d-5807d1fed38c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YYY</th>\n","      <th>MM</th>\n","      <th>DD</th>\n","      <th>days</th>\n","      <th>days_m</th>\n","      <th>Bsr</th>\n","      <th>dB</th>\n","      <th>Kp1</th>\n","      <th>Kp2</th>\n","      <th>Kp3</th>\n","      <th>...</th>\n","      <th>ap4</th>\n","      <th>ap5</th>\n","      <th>ap6</th>\n","      <th>ap7</th>\n","      <th>ap8</th>\n","      <th>Ap</th>\n","      <th>SN</th>\n","      <th>F10.7obs</th>\n","      <th>F10.7adj</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.5</td>\n","      <td>1352</td>\n","      <td>10</td>\n","      <td>3.333</td>\n","      <td>2.667</td>\n","      <td>2.333</td>\n","      <td>...</td>\n","      <td>12</td>\n","      <td>18</td>\n","      <td>12</td>\n","      <td>18</td>\n","      <td>18</td>\n","      <td>15</td>\n","      <td>22</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1.5</td>\n","      <td>1352</td>\n","      <td>11</td>\n","      <td>3.667</td>\n","      <td>3.667</td>\n","      <td>3.333</td>\n","      <td>...</td>\n","      <td>22</td>\n","      <td>18</td>\n","      <td>39</td>\n","      <td>15</td>\n","      <td>48</td>\n","      <td>26</td>\n","      <td>43</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2.5</td>\n","      <td>1352</td>\n","      <td>12</td>\n","      <td>3.333</td>\n","      <td>3.333</td>\n","      <td>3.000</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>12</td>\n","      <td>7</td>\n","      <td>11</td>\n","      <td>23</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3.5</td>\n","      <td>1352</td>\n","      <td>13</td>\n","      <td>2.000</td>\n","      <td>0.333</td>\n","      <td>1.000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4.5</td>\n","      <td>1352</td>\n","      <td>14</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.333</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>33512</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>33512</td>\n","      <td>33512.5</td>\n","      <td>2593</td>\n","      <td>15</td>\n","      <td>3.000</td>\n","      <td>3.333</td>\n","      <td>1.000</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>173</td>\n","      <td>157.4</td>\n","      <td>157.7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33513</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>33513</td>\n","      <td>33513.5</td>\n","      <td>2593</td>\n","      <td>16</td>\n","      <td>1.000</td>\n","      <td>2.333</td>\n","      <td>1.333</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>153.7</td>\n","      <td>153.8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33514</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>33514</td>\n","      <td>33514.5</td>\n","      <td>2593</td>\n","      <td>17</td>\n","      <td>3.000</td>\n","      <td>2.333</td>\n","      <td>2.333</td>\n","      <td>...</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>22</td>\n","      <td>10</td>\n","      <td>159</td>\n","      <td>155.0</td>\n","      <td>155.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33515</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>33515</td>\n","      <td>33515.5</td>\n","      <td>2593</td>\n","      <td>18</td>\n","      <td>4.333</td>\n","      <td>5.000</td>\n","      <td>2.333</td>\n","      <td>...</td>\n","      <td>15</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>16</td>\n","      <td>169</td>\n","      <td>156.1</td>\n","      <td>156.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33516</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>33516</td>\n","      <td>33516.5</td>\n","      <td>2593</td>\n","      <td>19</td>\n","      <td>2.000</td>\n","      <td>2.333</td>\n","      <td>2.000</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>7</td>\n","      <td>152</td>\n","      <td>155.3</td>\n","      <td>155.3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>33517 rows Ã— 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a0f47bd-4f4b-49f0-a30d-5807d1fed38c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0a0f47bd-4f4b-49f0-a30d-5807d1fed38c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0a0f47bd-4f4b-49f0-a30d-5807d1fed38c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-93d67364-9af9-4a9c-8533-b947e4b99d4c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-93d67364-9af9-4a9c-8533-b947e4b99d4c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-93d67364-9af9-4a9c-8533-b947e4b99d4c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["data5 = pd.read_csv(\"/content/drive/MyDrive/NASA Hackathon/Datasets/Intial Datasets/www-app3.gfz-potsdam.de_kp_index_Kp_ap_since_1932.txt\", delim_whitespace=True)"],"metadata":{"id":"wdjxiT35NscJ","executionInfo":{"status":"ok","timestamp":1696733228137,"user_tz":-330,"elapsed":17,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["data5.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"jIM0A9z8N45C","executionInfo":{"status":"ok","timestamp":1696733228137,"user_tz":-330,"elapsed":16,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"655ba359-6c66-4b8f-f1bf-1200ebdb474c"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    YYY  MM  DD  hh.h  hh._m   days  days_m     Kp  ap  D\n","0  1932   1   1   0.0    1.5  0.000  0.0625  3.333  18  1\n","1  1932   1   1   3.0    4.5  0.125  0.1875  2.667  12  1\n","2  1932   1   1   6.0    7.5  0.250  0.3125  2.333   9  1\n","3  1932   1   1   9.0   10.5  0.375  0.4375  2.667  12  1\n","4  1932   1   1  12.0   13.5  0.500  0.5625  3.333  18  1\n","5  1932   1   1  15.0   16.5  0.625  0.6875  2.667  12  1\n","6  1932   1   1  18.0   19.5  0.750  0.8125  3.333  18  1\n","7  1932   1   1  21.0   22.5  0.875  0.9375  3.333  18  1\n","8  1932   1   2   0.0    1.5  1.000  1.0625  3.667  22  1\n","9  1932   1   2   3.0    4.5  1.125  1.1875  3.667  22  1"],"text/html":["\n","  <div id=\"df-b0bf0176-3af2-4e97-ae9a-94194c453ec3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YYY</th>\n","      <th>MM</th>\n","      <th>DD</th>\n","      <th>hh.h</th>\n","      <th>hh._m</th>\n","      <th>days</th>\n","      <th>days_m</th>\n","      <th>Kp</th>\n","      <th>ap</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>0.000</td>\n","      <td>0.0625</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>4.5</td>\n","      <td>0.125</td>\n","      <td>0.1875</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>7.5</td>\n","      <td>0.250</td>\n","      <td>0.3125</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","      <td>10.5</td>\n","      <td>0.375</td>\n","      <td>0.4375</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","      <td>13.5</td>\n","      <td>0.500</td>\n","      <td>0.5625</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>16.5</td>\n","      <td>0.625</td>\n","      <td>0.6875</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>18.0</td>\n","      <td>19.5</td>\n","      <td>0.750</td>\n","      <td>0.8125</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>21.0</td>\n","      <td>22.5</td>\n","      <td>0.875</td>\n","      <td>0.9375</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>1.000</td>\n","      <td>1.0625</td>\n","      <td>3.667</td>\n","      <td>22</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3.0</td>\n","      <td>4.5</td>\n","      <td>1.125</td>\n","      <td>1.1875</td>\n","      <td>3.667</td>\n","      <td>22</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0bf0176-3af2-4e97-ae9a-94194c453ec3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b0bf0176-3af2-4e97-ae9a-94194c453ec3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b0bf0176-3af2-4e97-ae9a-94194c453ec3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d111b1a0-0027-41a0-ae50-521fee12de63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d111b1a0-0027-41a0-ae50-521fee12de63')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d111b1a0-0027-41a0-ae50-521fee12de63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["data5[\"Kp\"].unique"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yjv6_YghfQ63","executionInfo":{"status":"ok","timestamp":1696733228137,"user_tz":-330,"elapsed":15,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"7fbb41df-b142-4803-be7c-584187aae295"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method Series.unique of 0         3.333\n","1         2.667\n","2         2.333\n","3         2.667\n","4         3.333\n","          ...  \n","268131    1.333\n","268132    1.000\n","268133    1.333\n","268134    0.667\n","268135    3.000\n","Name: Kp, Length: 268136, dtype: float64>"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["# Dataset 1 Preparations"],"metadata":{"id":"pHUPIK1spSTn"}},{"cell_type":"code","source":["timestamp_dtype = data1[\"Timestamp\"].dtype\n","print(timestamp_dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GMdKzuYQ7uus","executionInfo":{"status":"ok","timestamp":1696705190877,"user_tz":-330,"elapsed":462,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"bec57481-946e-4c81-a18c-300a1e8972e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["object\n"]}]},{"cell_type":"code","source":["data1[\"Timestamp\"] = data1[\"Timestamp\"].astype(str)"],"metadata":{"id":"QhjZ4aOUMeFR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1[\"Date\"] = data1[\"Timestamp\"].str.split(\" \").str[0]\n","data1[\"Time\"] = data1[\"Timestamp\"].str.split(\" \").str[1]"],"metadata":{"id":"MW8HgZXVMv9R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1.drop(\"Timestamp\", axis=1, inplace=True)"],"metadata":{"id":"oHL0xZHUM6ew"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":360},"id":"SfJbALCbNA8E","executionInfo":{"status":"ok","timestamp":1696705215742,"user_tz":-330,"elapsed":458,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"93b36510-edfd-4410-9626-97dd4c76c36d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  Bx-max  By-med  By-min  \\\n","0       1    7.89    7.21    8.66   -0.52   -3.56    0.57    7.14    6.02   \n","1       1    7.44    6.78    8.34   -2.78   -3.86   -0.63    6.98    5.63   \n","2       1    5.86    5.41    7.00   -1.94   -3.24   -0.14    5.28    4.35   \n","3       1    6.40    4.40    7.56   -0.84   -4.08    3.91    5.01    2.13   \n","4       1    7.24    5.17    7.67   -1.80   -2.70   -1.09    6.36    4.34   \n","\n","   By-max  ...  Dens-min  Dens-max  Speed-med  Speed-min  Speed-max  Temp-med  \\\n","0    7.69  ...      7.61     11.18      304.7      303.7      315.4     16786   \n","1    7.26  ...      8.50     13.24      313.1      311.4      316.8     12555   \n","2    6.03  ...      8.87     13.75      314.2      307.2      322.6     17006   \n","3    6.65  ...      6.12      9.70      314.3      298.8      317.2     28372   \n","4    7.31  ...      5.58      7.61      318.7      313.6      326.3     20563   \n","\n","   Temp-min  Temp-max        Date      Time  \n","0     12124     19425  2023-08-17  00:00:00  \n","1     10256     16625  2023-08-17  01:00:00  \n","2     14398     27957  2023-08-17  02:00:00  \n","3     20008     40698  2023-08-17  03:00:00  \n","4     16439     25790  2023-08-17  04:00:00  \n","\n","[5 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-b38d486c-5220-445d-ae43-9c62c4c2cc57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>By-max</th>\n","      <th>...</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>7.89</td>\n","      <td>7.21</td>\n","      <td>8.66</td>\n","      <td>-0.52</td>\n","      <td>-3.56</td>\n","      <td>0.57</td>\n","      <td>7.14</td>\n","      <td>6.02</td>\n","      <td>7.69</td>\n","      <td>...</td>\n","      <td>7.61</td>\n","      <td>11.18</td>\n","      <td>304.7</td>\n","      <td>303.7</td>\n","      <td>315.4</td>\n","      <td>16786</td>\n","      <td>12124</td>\n","      <td>19425</td>\n","      <td>2023-08-17</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>7.44</td>\n","      <td>6.78</td>\n","      <td>8.34</td>\n","      <td>-2.78</td>\n","      <td>-3.86</td>\n","      <td>-0.63</td>\n","      <td>6.98</td>\n","      <td>5.63</td>\n","      <td>7.26</td>\n","      <td>...</td>\n","      <td>8.50</td>\n","      <td>13.24</td>\n","      <td>313.1</td>\n","      <td>311.4</td>\n","      <td>316.8</td>\n","      <td>12555</td>\n","      <td>10256</td>\n","      <td>16625</td>\n","      <td>2023-08-17</td>\n","      <td>01:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>5.86</td>\n","      <td>5.41</td>\n","      <td>7.00</td>\n","      <td>-1.94</td>\n","      <td>-3.24</td>\n","      <td>-0.14</td>\n","      <td>5.28</td>\n","      <td>4.35</td>\n","      <td>6.03</td>\n","      <td>...</td>\n","      <td>8.87</td>\n","      <td>13.75</td>\n","      <td>314.2</td>\n","      <td>307.2</td>\n","      <td>322.6</td>\n","      <td>17006</td>\n","      <td>14398</td>\n","      <td>27957</td>\n","      <td>2023-08-17</td>\n","      <td>02:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>6.40</td>\n","      <td>4.40</td>\n","      <td>7.56</td>\n","      <td>-0.84</td>\n","      <td>-4.08</td>\n","      <td>3.91</td>\n","      <td>5.01</td>\n","      <td>2.13</td>\n","      <td>6.65</td>\n","      <td>...</td>\n","      <td>6.12</td>\n","      <td>9.70</td>\n","      <td>314.3</td>\n","      <td>298.8</td>\n","      <td>317.2</td>\n","      <td>28372</td>\n","      <td>20008</td>\n","      <td>40698</td>\n","      <td>2023-08-17</td>\n","      <td>03:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>7.24</td>\n","      <td>5.17</td>\n","      <td>7.67</td>\n","      <td>-1.80</td>\n","      <td>-2.70</td>\n","      <td>-1.09</td>\n","      <td>6.36</td>\n","      <td>4.34</td>\n","      <td>7.31</td>\n","      <td>...</td>\n","      <td>5.58</td>\n","      <td>7.61</td>\n","      <td>318.7</td>\n","      <td>313.6</td>\n","      <td>326.3</td>\n","      <td>20563</td>\n","      <td>16439</td>\n","      <td>25790</td>\n","      <td>2023-08-17</td>\n","      <td>04:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b38d486c-5220-445d-ae43-9c62c4c2cc57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b38d486c-5220-445d-ae43-9c62c4c2cc57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b38d486c-5220-445d-ae43-9c62c4c2cc57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-05f9b2d0-b93e-46bc-9698-b415ad356f1b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05f9b2d0-b93e-46bc-9698-b415ad356f1b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-05f9b2d0-b93e-46bc-9698-b415ad356f1b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":238}]},{"cell_type":"code","source":["# Convert the YYY, MM, DD, hh.h, and hh._m columns in data5 to two datetime columns: Start and End\n","data5[\"Start\"] = pd.to_datetime(data5[\"YYY\"].astype(str) + \"-\" + data5[\"MM\"].astype(str).str.zfill(2) + \"-\" + data5[\"DD\"].astype(str).str.zfill(2) + \" \" +\n","                                (data5[\"hh.h\"].astype(int).astype(str).str.zfill(2) + \":\" +\n","                                ((data5[\"hh.h\"] % 1) * 60).astype(int).astype(str).str.zfill(2) + \":00\"))\n","\n","data5[\"End\"] = pd.to_datetime(data5[\"YYY\"].astype(str) + \"-\" + data5[\"MM\"].astype(str).str.zfill(2) + \"-\" + data5[\"DD\"].astype(str).str.zfill(2) + \" \" +\n","                              (data5[\"hh._m\"].astype(int).astype(str).str.zfill(2) + \":\" +\n","                              ((data5[\"hh._m\"] % 1) * 100).astype(int).astype(str).str.zfill(2) + \":00\"))"],"metadata":{"id":"u8Ty6JjuNgWP","executionInfo":{"status":"ok","timestamp":1696733238883,"user_tz":-330,"elapsed":2005,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["data5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"iY1OITgMSZ_7","executionInfo":{"status":"ok","timestamp":1696733238884,"user_tz":-330,"elapsed":5,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"f3556045-be1e-4f2f-a6f3-8231cecedabd"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         YYY  MM  DD  hh.h  hh._m       days      days_m     Kp  ap  D  \\\n","0       1932   1   1   0.0    1.5      0.000      0.0625  3.333  18  1   \n","1       1932   1   1   3.0    4.5      0.125      0.1875  2.667  12  1   \n","2       1932   1   1   6.0    7.5      0.250      0.3125  2.333   9  1   \n","3       1932   1   1   9.0   10.5      0.375      0.4375  2.667  12  1   \n","4       1932   1   1  12.0   13.5      0.500      0.5625  3.333  18  1   \n","...      ...  ..  ..   ...    ...        ...         ...    ...  .. ..   \n","268131  2023  10   6   9.0   10.5  33516.375  33516.4375  1.333   5  0   \n","268132  2023  10   6  12.0   13.5  33516.500  33516.5625  1.000   4  0   \n","268133  2023  10   6  15.0   16.5  33516.625  33516.6875  1.333   5  0   \n","268134  2023  10   6  18.0   19.5  33516.750  33516.8125  0.667   3  0   \n","268135  2023  10   6  21.0   22.5  33516.875  33516.9375  3.000  15  0   \n","\n","                     Start                 End  \n","0      1932-01-01 00:00:00 1932-01-01 01:50:00  \n","1      1932-01-01 03:00:00 1932-01-01 04:50:00  \n","2      1932-01-01 06:00:00 1932-01-01 07:50:00  \n","3      1932-01-01 09:00:00 1932-01-01 10:50:00  \n","4      1932-01-01 12:00:00 1932-01-01 13:50:00  \n","...                    ...                 ...  \n","268131 2023-10-06 09:00:00 2023-10-06 10:50:00  \n","268132 2023-10-06 12:00:00 2023-10-06 13:50:00  \n","268133 2023-10-06 15:00:00 2023-10-06 16:50:00  \n","268134 2023-10-06 18:00:00 2023-10-06 19:50:00  \n","268135 2023-10-06 21:00:00 2023-10-06 22:50:00  \n","\n","[268136 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-86c89ba6-3bf0-4a54-91a4-ac93c5817cc7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YYY</th>\n","      <th>MM</th>\n","      <th>DD</th>\n","      <th>hh.h</th>\n","      <th>hh._m</th>\n","      <th>days</th>\n","      <th>days_m</th>\n","      <th>Kp</th>\n","      <th>ap</th>\n","      <th>D</th>\n","      <th>Start</th>\n","      <th>End</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>0.000</td>\n","      <td>0.0625</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1932-01-01 00:00:00</td>\n","      <td>1932-01-01 01:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>4.5</td>\n","      <td>0.125</td>\n","      <td>0.1875</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>1932-01-01 03:00:00</td>\n","      <td>1932-01-01 04:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>7.5</td>\n","      <td>0.250</td>\n","      <td>0.3125</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1932-01-01 06:00:00</td>\n","      <td>1932-01-01 07:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","      <td>10.5</td>\n","      <td>0.375</td>\n","      <td>0.4375</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>1932-01-01 09:00:00</td>\n","      <td>1932-01-01 10:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","      <td>13.5</td>\n","      <td>0.500</td>\n","      <td>0.5625</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1932-01-01 12:00:00</td>\n","      <td>1932-01-01 13:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>268131</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>9.0</td>\n","      <td>10.5</td>\n","      <td>33516.375</td>\n","      <td>33516.4375</td>\n","      <td>1.333</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>2023-10-06 09:00:00</td>\n","      <td>2023-10-06 10:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268132</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>12.0</td>\n","      <td>13.5</td>\n","      <td>33516.500</td>\n","      <td>33516.5625</td>\n","      <td>1.000</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>2023-10-06 13:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268133</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>15.0</td>\n","      <td>16.5</td>\n","      <td>33516.625</td>\n","      <td>33516.6875</td>\n","      <td>1.333</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>2023-10-06 15:00:00</td>\n","      <td>2023-10-06 16:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268134</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>18.0</td>\n","      <td>19.5</td>\n","      <td>33516.750</td>\n","      <td>33516.8125</td>\n","      <td>0.667</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>2023-10-06 19:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268135</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>21.0</td>\n","      <td>22.5</td>\n","      <td>33516.875</td>\n","      <td>33516.9375</td>\n","      <td>3.000</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>2023-10-06 21:00:00</td>\n","      <td>2023-10-06 22:50:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>268136 rows Ã— 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86c89ba6-3bf0-4a54-91a4-ac93c5817cc7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86c89ba6-3bf0-4a54-91a4-ac93c5817cc7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86c89ba6-3bf0-4a54-91a4-ac93c5817cc7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7130ca73-0b93-4a36-8d3c-90a8d27d11c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7130ca73-0b93-4a36-8d3c-90a8d27d11c8')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7130ca73-0b93-4a36-8d3c-90a8d27d11c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# Convert the Date and Time columns in data to a single datetime column\n","data1[\"Datetime\"] = pd.to_datetime(data1[\"Date\"] + \" \" + data1[\"Time\"])\n","\n","# Initialize a new Kp column in data with default values as 0\n","data1[\"Kp_value\"] = 0"],"metadata":{"id":"C-d3NMJwSTyT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Iterate through each row in data and check if its Datetime lies within any interval in data5\n","for idx, row in data1.iterrows():\n","    matching_rows = data5[(data5[\"Start\"] <= row[\"Datetime\"]) & (data5[\"End\"] > row[\"Datetime\"])]\n","    if not matching_rows.empty:\n","        data1.at[idx, \"Kp_value\"] = matching_rows[\"Kp\"].iloc[0]\n","\n","# This will result in data having a new Kp_value column filled as per the requirements"],"metadata":{"id":"WoTcemcNSTAC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Initialize a new ap column in data with default values as 0\n","data1[\"ap_value\"] = 0\n","\n","# Iterate through each row in data and check if its Datetime lies within any interval in data5\n","for idx, row in data1.iterrows():\n","    matching_rows = data5[(data5[\"Start\"] <= row[\"Datetime\"]) & (data5[\"End\"] > row[\"Datetime\"])]\n","    if not matching_rows.empty:\n","        data1.at[idx, \"ap_value\"] = matching_rows[\"ap\"].iloc[0]\n","\n","# This will result in data having a new ap_value column filled as per the requirements"],"metadata":{"id":"-AvsVU5sTPzb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":808},"id":"XNgg6AZhTQ6v","executionInfo":{"status":"ok","timestamp":1696705293271,"user_tz":-330,"elapsed":491,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"8dae1a11-ece2-4126-b8a2-38f2998bfe9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  Bx-max  By-med  By-min  \\\n","0          1    7.89    7.21    8.66   -0.52   -3.56    0.57    7.14    6.02   \n","1          1    7.44    6.78    8.34   -2.78   -3.86   -0.63    6.98    5.63   \n","2          1    5.86    5.41    7.00   -1.94   -3.24   -0.14    5.28    4.35   \n","3          1    6.40    4.40    7.56   -0.84   -4.08    3.91    5.01    2.13   \n","4          1    7.24    5.17    7.67   -1.80   -2.70   -1.09    6.36    4.34   \n","...      ...     ...     ...     ...     ...     ...     ...     ...     ...   \n","1233       1    5.60    5.41    5.75   -1.38   -1.73   -1.02    2.35    2.12   \n","1234       1    5.32    5.09    5.64    0.10   -1.13    0.61    1.66    0.77   \n","1235       1    5.36    5.21    5.41   -0.06   -1.18    0.34    1.93    1.15   \n","1236       1    5.55    5.31    5.73   -1.06   -2.22   -0.29    3.06    1.62   \n","1237       1    5.65    5.45    5.78   -0.94   -2.30   -0.45    2.66    1.38   \n","\n","      By-max  ...  Speed-min  Speed-max  Temp-med  Temp-min  Temp-max  \\\n","0       7.69  ...      303.7      315.4     16786     12124     19425   \n","1       7.26  ...      311.4      316.8     12555     10256     16625   \n","2       6.03  ...      307.2      322.6     17006     14398     27957   \n","3       6.65  ...      298.8      317.2     28372     20008     40698   \n","4       7.31  ...      313.6      326.3     20563     16439     25790   \n","...      ...  ...        ...        ...       ...       ...       ...   \n","1233    2.64  ...      400.9      441.8    327364    150079    336855   \n","1234    2.58  ...      350.1      443.0    180254     13068    336487   \n","1235    2.42  ...      353.8      477.4    168396     13581    213827   \n","1236    3.79  ...      354.0      478.3    182189      5000    200321   \n","1237    3.75  ...      438.2      480.3    186108     92265    197999   \n","\n","            Date      Time            Datetime  Kp_value  ap_value  \n","0     2023-08-17  00:00:00 2023-08-17 00:00:00     2.333         9  \n","1     2023-08-17  01:00:00 2023-08-17 01:00:00     2.333         9  \n","2     2023-08-17  02:00:00 2023-08-17 02:00:00     0.000         0  \n","3     2023-08-17  03:00:00 2023-08-17 03:00:00     1.667         6  \n","4     2023-08-17  04:00:00 2023-08-17 04:00:00     1.667         6  \n","...          ...       ...                 ...       ...       ...  \n","1233  2023-10-07  09:00:00 2023-10-07 09:00:00     0.000         0  \n","1234  2023-10-07  10:00:00 2023-10-07 10:00:00     0.000         0  \n","1235  2023-10-07  11:00:00 2023-10-07 11:00:00     0.000         0  \n","1236  2023-10-07  12:00:00 2023-10-07 12:00:00     0.000         0  \n","1237  2023-10-07  13:00:00 2023-10-07 13:00:00     0.000         0  \n","\n","[1238 rows x 33 columns]"],"text/html":["\n","  <div id=\"df-bad4e2db-0965-46b9-982b-7e4842666f6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>By-max</th>\n","      <th>...</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Datetime</th>\n","      <th>Kp_value</th>\n","      <th>ap_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>7.89</td>\n","      <td>7.21</td>\n","      <td>8.66</td>\n","      <td>-0.52</td>\n","      <td>-3.56</td>\n","      <td>0.57</td>\n","      <td>7.14</td>\n","      <td>6.02</td>\n","      <td>7.69</td>\n","      <td>...</td>\n","      <td>303.7</td>\n","      <td>315.4</td>\n","      <td>16786</td>\n","      <td>12124</td>\n","      <td>19425</td>\n","      <td>2023-08-17</td>\n","      <td>00:00:00</td>\n","      <td>2023-08-17 00:00:00</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>7.44</td>\n","      <td>6.78</td>\n","      <td>8.34</td>\n","      <td>-2.78</td>\n","      <td>-3.86</td>\n","      <td>-0.63</td>\n","      <td>6.98</td>\n","      <td>5.63</td>\n","      <td>7.26</td>\n","      <td>...</td>\n","      <td>311.4</td>\n","      <td>316.8</td>\n","      <td>12555</td>\n","      <td>10256</td>\n","      <td>16625</td>\n","      <td>2023-08-17</td>\n","      <td>01:00:00</td>\n","      <td>2023-08-17 01:00:00</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>5.86</td>\n","      <td>5.41</td>\n","      <td>7.00</td>\n","      <td>-1.94</td>\n","      <td>-3.24</td>\n","      <td>-0.14</td>\n","      <td>5.28</td>\n","      <td>4.35</td>\n","      <td>6.03</td>\n","      <td>...</td>\n","      <td>307.2</td>\n","      <td>322.6</td>\n","      <td>17006</td>\n","      <td>14398</td>\n","      <td>27957</td>\n","      <td>2023-08-17</td>\n","      <td>02:00:00</td>\n","      <td>2023-08-17 02:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>6.40</td>\n","      <td>4.40</td>\n","      <td>7.56</td>\n","      <td>-0.84</td>\n","      <td>-4.08</td>\n","      <td>3.91</td>\n","      <td>5.01</td>\n","      <td>2.13</td>\n","      <td>6.65</td>\n","      <td>...</td>\n","      <td>298.8</td>\n","      <td>317.2</td>\n","      <td>28372</td>\n","      <td>20008</td>\n","      <td>40698</td>\n","      <td>2023-08-17</td>\n","      <td>03:00:00</td>\n","      <td>2023-08-17 03:00:00</td>\n","      <td>1.667</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>7.24</td>\n","      <td>5.17</td>\n","      <td>7.67</td>\n","      <td>-1.80</td>\n","      <td>-2.70</td>\n","      <td>-1.09</td>\n","      <td>6.36</td>\n","      <td>4.34</td>\n","      <td>7.31</td>\n","      <td>...</td>\n","      <td>313.6</td>\n","      <td>326.3</td>\n","      <td>20563</td>\n","      <td>16439</td>\n","      <td>25790</td>\n","      <td>2023-08-17</td>\n","      <td>04:00:00</td>\n","      <td>2023-08-17 04:00:00</td>\n","      <td>1.667</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1233</th>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>5.41</td>\n","      <td>5.75</td>\n","      <td>-1.38</td>\n","      <td>-1.73</td>\n","      <td>-1.02</td>\n","      <td>2.35</td>\n","      <td>2.12</td>\n","      <td>2.64</td>\n","      <td>...</td>\n","      <td>400.9</td>\n","      <td>441.8</td>\n","      <td>327364</td>\n","      <td>150079</td>\n","      <td>336855</td>\n","      <td>2023-10-07</td>\n","      <td>09:00:00</td>\n","      <td>2023-10-07 09:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1234</th>\n","      <td>1</td>\n","      <td>5.32</td>\n","      <td>5.09</td>\n","      <td>5.64</td>\n","      <td>0.10</td>\n","      <td>-1.13</td>\n","      <td>0.61</td>\n","      <td>1.66</td>\n","      <td>0.77</td>\n","      <td>2.58</td>\n","      <td>...</td>\n","      <td>350.1</td>\n","      <td>443.0</td>\n","      <td>180254</td>\n","      <td>13068</td>\n","      <td>336487</td>\n","      <td>2023-10-07</td>\n","      <td>10:00:00</td>\n","      <td>2023-10-07 10:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1235</th>\n","      <td>1</td>\n","      <td>5.36</td>\n","      <td>5.21</td>\n","      <td>5.41</td>\n","      <td>-0.06</td>\n","      <td>-1.18</td>\n","      <td>0.34</td>\n","      <td>1.93</td>\n","      <td>1.15</td>\n","      <td>2.42</td>\n","      <td>...</td>\n","      <td>353.8</td>\n","      <td>477.4</td>\n","      <td>168396</td>\n","      <td>13581</td>\n","      <td>213827</td>\n","      <td>2023-10-07</td>\n","      <td>11:00:00</td>\n","      <td>2023-10-07 11:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1236</th>\n","      <td>1</td>\n","      <td>5.55</td>\n","      <td>5.31</td>\n","      <td>5.73</td>\n","      <td>-1.06</td>\n","      <td>-2.22</td>\n","      <td>-0.29</td>\n","      <td>3.06</td>\n","      <td>1.62</td>\n","      <td>3.79</td>\n","      <td>...</td>\n","      <td>354.0</td>\n","      <td>478.3</td>\n","      <td>182189</td>\n","      <td>5000</td>\n","      <td>200321</td>\n","      <td>2023-10-07</td>\n","      <td>12:00:00</td>\n","      <td>2023-10-07 12:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1237</th>\n","      <td>1</td>\n","      <td>5.65</td>\n","      <td>5.45</td>\n","      <td>5.78</td>\n","      <td>-0.94</td>\n","      <td>-2.30</td>\n","      <td>-0.45</td>\n","      <td>2.66</td>\n","      <td>1.38</td>\n","      <td>3.75</td>\n","      <td>...</td>\n","      <td>438.2</td>\n","      <td>480.3</td>\n","      <td>186108</td>\n","      <td>92265</td>\n","      <td>197999</td>\n","      <td>2023-10-07</td>\n","      <td>13:00:00</td>\n","      <td>2023-10-07 13:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1238 rows Ã— 33 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bad4e2db-0965-46b9-982b-7e4842666f6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bad4e2db-0965-46b9-982b-7e4842666f6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bad4e2db-0965-46b9-982b-7e4842666f6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2b62a436-1367-48c8-9a46-9084474e6ccf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b62a436-1367-48c8-9a46-9084474e6ccf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2b62a436-1367-48c8-9a46-9084474e6ccf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":244}]},{"cell_type":"code","source":["data1[\"Date\"] = pd.to_datetime(data1[\"Date\"])"],"metadata":{"id":"FNyLW2oTLvI_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Ensure the \"Date\" column in both dataframes is of datetime format\n","data4[\"Date\"] = pd.to_datetime(data4[\"YYY\"].astype(str) + \"-\" + data4[\"MM\"].astype(str).str.zfill(2) + \"-\" + data4[\"DD\"].astype(str).str.zfill(2))"],"metadata":{"id":"BPssy4QuUtD8","executionInfo":{"status":"ok","timestamp":1696733282113,"user_tz":-330,"elapsed":796,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["# Now, merge the two dataframes on the \"Date\" column\n","merged_data = pd.merge(data1, data4[[\"Date\", \"SN\", \"F10.7obs\", \"F10.7adj\"]], on=\"Date\", how=\"left\")"],"metadata":{"id":"pvzSswjSLyUq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":808},"id":"oKuJVSDKVIpF","executionInfo":{"status":"ok","timestamp":1696705705890,"user_tz":-330,"elapsed":5,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"d63c8e83-a723-4e72-f436-90c42f4ef081"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  Bx-max  By-med  By-min  \\\n","0          1    7.89    7.21    8.66   -0.52   -3.56    0.57    7.14    6.02   \n","1          1    7.44    6.78    8.34   -2.78   -3.86   -0.63    6.98    5.63   \n","2          1    5.86    5.41    7.00   -1.94   -3.24   -0.14    5.28    4.35   \n","3          1    6.40    4.40    7.56   -0.84   -4.08    3.91    5.01    2.13   \n","4          1    7.24    5.17    7.67   -1.80   -2.70   -1.09    6.36    4.34   \n","...      ...     ...     ...     ...     ...     ...     ...     ...     ...   \n","1233       1    5.60    5.41    5.75   -1.38   -1.73   -1.02    2.35    2.12   \n","1234       1    5.32    5.09    5.64    0.10   -1.13    0.61    1.66    0.77   \n","1235       1    5.36    5.21    5.41   -0.06   -1.18    0.34    1.93    1.15   \n","1236       1    5.55    5.31    5.73   -1.06   -2.22   -0.29    3.06    1.62   \n","1237       1    5.65    5.45    5.78   -0.94   -2.30   -0.45    2.66    1.38   \n","\n","      By-max  ...  Temp-min  Temp-max       Date      Time  \\\n","0       7.69  ...     12124     19425 2023-08-17  00:00:00   \n","1       7.26  ...     10256     16625 2023-08-17  01:00:00   \n","2       6.03  ...     14398     27957 2023-08-17  02:00:00   \n","3       6.65  ...     20008     40698 2023-08-17  03:00:00   \n","4       7.31  ...     16439     25790 2023-08-17  04:00:00   \n","...      ...  ...       ...       ...        ...       ...   \n","1233    2.64  ...    150079    336855 2023-10-07  09:00:00   \n","1234    2.58  ...     13068    336487 2023-10-07  10:00:00   \n","1235    2.42  ...     13581    213827 2023-10-07  11:00:00   \n","1236    3.79  ...      5000    200321 2023-10-07  12:00:00   \n","1237    3.75  ...     92265    197999 2023-10-07  13:00:00   \n","\n","                Datetime  Kp_value  ap_value     SN  F10.7obs  F10.7adj  \n","0    2023-08-17 00:00:00     2.333         9  146.0     151.9     155.7  \n","1    2023-08-17 01:00:00     2.333         9  146.0     151.9     155.7  \n","2    2023-08-17 02:00:00     0.000         0  146.0     151.9     155.7  \n","3    2023-08-17 03:00:00     1.667         6  146.0     151.9     155.7  \n","4    2023-08-17 04:00:00     1.667         6  146.0     151.9     155.7  \n","...                  ...       ...       ...    ...       ...       ...  \n","1233 2023-10-07 09:00:00     0.000         0    NaN       NaN       NaN  \n","1234 2023-10-07 10:00:00     0.000         0    NaN       NaN       NaN  \n","1235 2023-10-07 11:00:00     0.000         0    NaN       NaN       NaN  \n","1236 2023-10-07 12:00:00     0.000         0    NaN       NaN       NaN  \n","1237 2023-10-07 13:00:00     0.000         0    NaN       NaN       NaN  \n","\n","[1238 rows x 36 columns]"],"text/html":["\n","  <div id=\"df-ba0e737c-5f25-4631-825d-80fee3072d53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>By-max</th>\n","      <th>...</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Datetime</th>\n","      <th>Kp_value</th>\n","      <th>ap_value</th>\n","      <th>SN</th>\n","      <th>F10.7obs</th>\n","      <th>F10.7adj</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>7.89</td>\n","      <td>7.21</td>\n","      <td>8.66</td>\n","      <td>-0.52</td>\n","      <td>-3.56</td>\n","      <td>0.57</td>\n","      <td>7.14</td>\n","      <td>6.02</td>\n","      <td>7.69</td>\n","      <td>...</td>\n","      <td>12124</td>\n","      <td>19425</td>\n","      <td>2023-08-17</td>\n","      <td>00:00:00</td>\n","      <td>2023-08-17 00:00:00</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>7.44</td>\n","      <td>6.78</td>\n","      <td>8.34</td>\n","      <td>-2.78</td>\n","      <td>-3.86</td>\n","      <td>-0.63</td>\n","      <td>6.98</td>\n","      <td>5.63</td>\n","      <td>7.26</td>\n","      <td>...</td>\n","      <td>10256</td>\n","      <td>16625</td>\n","      <td>2023-08-17</td>\n","      <td>01:00:00</td>\n","      <td>2023-08-17 01:00:00</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>5.86</td>\n","      <td>5.41</td>\n","      <td>7.00</td>\n","      <td>-1.94</td>\n","      <td>-3.24</td>\n","      <td>-0.14</td>\n","      <td>5.28</td>\n","      <td>4.35</td>\n","      <td>6.03</td>\n","      <td>...</td>\n","      <td>14398</td>\n","      <td>27957</td>\n","      <td>2023-08-17</td>\n","      <td>02:00:00</td>\n","      <td>2023-08-17 02:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>6.40</td>\n","      <td>4.40</td>\n","      <td>7.56</td>\n","      <td>-0.84</td>\n","      <td>-4.08</td>\n","      <td>3.91</td>\n","      <td>5.01</td>\n","      <td>2.13</td>\n","      <td>6.65</td>\n","      <td>...</td>\n","      <td>20008</td>\n","      <td>40698</td>\n","      <td>2023-08-17</td>\n","      <td>03:00:00</td>\n","      <td>2023-08-17 03:00:00</td>\n","      <td>1.667</td>\n","      <td>6</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>7.24</td>\n","      <td>5.17</td>\n","      <td>7.67</td>\n","      <td>-1.80</td>\n","      <td>-2.70</td>\n","      <td>-1.09</td>\n","      <td>6.36</td>\n","      <td>4.34</td>\n","      <td>7.31</td>\n","      <td>...</td>\n","      <td>16439</td>\n","      <td>25790</td>\n","      <td>2023-08-17</td>\n","      <td>04:00:00</td>\n","      <td>2023-08-17 04:00:00</td>\n","      <td>1.667</td>\n","      <td>6</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1233</th>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>5.41</td>\n","      <td>5.75</td>\n","      <td>-1.38</td>\n","      <td>-1.73</td>\n","      <td>-1.02</td>\n","      <td>2.35</td>\n","      <td>2.12</td>\n","      <td>2.64</td>\n","      <td>...</td>\n","      <td>150079</td>\n","      <td>336855</td>\n","      <td>2023-10-07</td>\n","      <td>09:00:00</td>\n","      <td>2023-10-07 09:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1234</th>\n","      <td>1</td>\n","      <td>5.32</td>\n","      <td>5.09</td>\n","      <td>5.64</td>\n","      <td>0.10</td>\n","      <td>-1.13</td>\n","      <td>0.61</td>\n","      <td>1.66</td>\n","      <td>0.77</td>\n","      <td>2.58</td>\n","      <td>...</td>\n","      <td>13068</td>\n","      <td>336487</td>\n","      <td>2023-10-07</td>\n","      <td>10:00:00</td>\n","      <td>2023-10-07 10:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1235</th>\n","      <td>1</td>\n","      <td>5.36</td>\n","      <td>5.21</td>\n","      <td>5.41</td>\n","      <td>-0.06</td>\n","      <td>-1.18</td>\n","      <td>0.34</td>\n","      <td>1.93</td>\n","      <td>1.15</td>\n","      <td>2.42</td>\n","      <td>...</td>\n","      <td>13581</td>\n","      <td>213827</td>\n","      <td>2023-10-07</td>\n","      <td>11:00:00</td>\n","      <td>2023-10-07 11:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1236</th>\n","      <td>1</td>\n","      <td>5.55</td>\n","      <td>5.31</td>\n","      <td>5.73</td>\n","      <td>-1.06</td>\n","      <td>-2.22</td>\n","      <td>-0.29</td>\n","      <td>3.06</td>\n","      <td>1.62</td>\n","      <td>3.79</td>\n","      <td>...</td>\n","      <td>5000</td>\n","      <td>200321</td>\n","      <td>2023-10-07</td>\n","      <td>12:00:00</td>\n","      <td>2023-10-07 12:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1237</th>\n","      <td>1</td>\n","      <td>5.65</td>\n","      <td>5.45</td>\n","      <td>5.78</td>\n","      <td>-0.94</td>\n","      <td>-2.30</td>\n","      <td>-0.45</td>\n","      <td>2.66</td>\n","      <td>1.38</td>\n","      <td>3.75</td>\n","      <td>...</td>\n","      <td>92265</td>\n","      <td>197999</td>\n","      <td>2023-10-07</td>\n","      <td>13:00:00</td>\n","      <td>2023-10-07 13:00:00</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1238 rows Ã— 36 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba0e737c-5f25-4631-825d-80fee3072d53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ba0e737c-5f25-4631-825d-80fee3072d53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ba0e737c-5f25-4631-825d-80fee3072d53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c5b9c57a-ebbc-47d3-af2d-4b047919d239\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c5b9c57a-ebbc-47d3-af2d-4b047919d239')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c5b9c57a-ebbc-47d3-af2d-4b047919d239 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":277}]},{"cell_type":"code","source":["merged_data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NaPGLOiTSpov","executionInfo":{"status":"ok","timestamp":1696705707850,"user_tz":-330,"elapsed":4,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"bc7b487e-28b4-4b11-ab6e-118aa714c582"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Source', 'Bt-med', 'Bt-min', 'Bt-max', 'Bx-med', 'Bx-min', 'Bx-max',\n","       'By-med', 'By-min', 'By-max', 'Bz-med', 'Bz-min', 'Bz-max', 'Phi-mean',\n","       'Phi-min', 'Phi-max', 'Theta-med', 'Theta-min', 'Theta-max', 'Dens-med',\n","       'Dens-min', 'Dens-max', 'Speed-med', 'Speed-min', 'Speed-max',\n","       'Temp-med', 'Temp-min', 'Temp-max', 'Date', 'Time', 'Datetime',\n","       'Kp_value', 'ap_value', 'SN', 'F10.7obs', 'F10.7adj'],\n","      dtype='object')"]},"metadata":{},"execution_count":278}]},{"cell_type":"code","source":["# Logical arrangement of columns\n","ordered_columns = [\n","    'Date', 'Time', 'Datetime', 'Source',\n","    'Bt-med', 'Bt-min', 'Bt-max', 'Bx-med', 'Bx-min', 'Bx-max',\n","    'By-med', 'By-min', 'By-max', 'Bz-med', 'Bz-min', 'Bz-max',\n","    'Phi-mean', 'Phi-min', 'Phi-max', 'Theta-med', 'Theta-min', 'Theta-max',\n","    'Dens-med', 'Dens-min', 'Dens-max', 'Speed-med', 'Speed-min', 'Speed-max',\n","    'Temp-med', 'Temp-min', 'Temp-max', 'SN', 'F10.7obs', 'F10.7adj',\n","    'ap_value','Kp_value'\n","]\n","\n","# Reorder the columns in the dataframe\n","merged_data = merged_data[ordered_columns]"],"metadata":{"id":"H7o2WearV8i9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":808},"id":"oFROvg6nXZ2m","executionInfo":{"status":"ok","timestamp":1696705711239,"user_tz":-330,"elapsed":724,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"9ef1cc70-0489-46ac-a3de-a53155f28048"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date      Time            Datetime  Source  Bt-med  Bt-min  Bt-max  \\\n","0    2023-08-17  00:00:00 2023-08-17 00:00:00       1    7.89    7.21    8.66   \n","1    2023-08-17  01:00:00 2023-08-17 01:00:00       1    7.44    6.78    8.34   \n","2    2023-08-17  02:00:00 2023-08-17 02:00:00       1    5.86    5.41    7.00   \n","3    2023-08-17  03:00:00 2023-08-17 03:00:00       1    6.40    4.40    7.56   \n","4    2023-08-17  04:00:00 2023-08-17 04:00:00       1    7.24    5.17    7.67   \n","...         ...       ...                 ...     ...     ...     ...     ...   \n","1233 2023-10-07  09:00:00 2023-10-07 09:00:00       1    5.60    5.41    5.75   \n","1234 2023-10-07  10:00:00 2023-10-07 10:00:00       1    5.32    5.09    5.64   \n","1235 2023-10-07  11:00:00 2023-10-07 11:00:00       1    5.36    5.21    5.41   \n","1236 2023-10-07  12:00:00 2023-10-07 12:00:00       1    5.55    5.31    5.73   \n","1237 2023-10-07  13:00:00 2023-10-07 13:00:00       1    5.65    5.45    5.78   \n","\n","      Bx-med  Bx-min  Bx-max  ...  Speed-min  Speed-max  Temp-med  Temp-min  \\\n","0      -0.52   -3.56    0.57  ...      303.7      315.4     16786     12124   \n","1      -2.78   -3.86   -0.63  ...      311.4      316.8     12555     10256   \n","2      -1.94   -3.24   -0.14  ...      307.2      322.6     17006     14398   \n","3      -0.84   -4.08    3.91  ...      298.8      317.2     28372     20008   \n","4      -1.80   -2.70   -1.09  ...      313.6      326.3     20563     16439   \n","...      ...     ...     ...  ...        ...        ...       ...       ...   \n","1233   -1.38   -1.73   -1.02  ...      400.9      441.8    327364    150079   \n","1234    0.10   -1.13    0.61  ...      350.1      443.0    180254     13068   \n","1235   -0.06   -1.18    0.34  ...      353.8      477.4    168396     13581   \n","1236   -1.06   -2.22   -0.29  ...      354.0      478.3    182189      5000   \n","1237   -0.94   -2.30   -0.45  ...      438.2      480.3    186108     92265   \n","\n","      Temp-max     SN  F10.7obs  F10.7adj  ap_value  Kp_value  \n","0        19425  146.0     151.9     155.7         9     2.333  \n","1        16625  146.0     151.9     155.7         9     2.333  \n","2        27957  146.0     151.9     155.7         0     0.000  \n","3        40698  146.0     151.9     155.7         6     1.667  \n","4        25790  146.0     151.9     155.7         6     1.667  \n","...        ...    ...       ...       ...       ...       ...  \n","1233    336855    NaN       NaN       NaN         0     0.000  \n","1234    336487    NaN       NaN       NaN         0     0.000  \n","1235    213827    NaN       NaN       NaN         0     0.000  \n","1236    200321    NaN       NaN       NaN         0     0.000  \n","1237    197999    NaN       NaN       NaN         0     0.000  \n","\n","[1238 rows x 36 columns]"],"text/html":["\n","  <div id=\"df-b924c1cc-52d5-4a94-82a7-d4cbe5a813c6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Datetime</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>...</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>SN</th>\n","      <th>F10.7obs</th>\n","      <th>F10.7adj</th>\n","      <th>ap_value</th>\n","      <th>Kp_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-08-17</td>\n","      <td>00:00:00</td>\n","      <td>2023-08-17 00:00:00</td>\n","      <td>1</td>\n","      <td>7.89</td>\n","      <td>7.21</td>\n","      <td>8.66</td>\n","      <td>-0.52</td>\n","      <td>-3.56</td>\n","      <td>0.57</td>\n","      <td>...</td>\n","      <td>303.7</td>\n","      <td>315.4</td>\n","      <td>16786</td>\n","      <td>12124</td>\n","      <td>19425</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>9</td>\n","      <td>2.333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-08-17</td>\n","      <td>01:00:00</td>\n","      <td>2023-08-17 01:00:00</td>\n","      <td>1</td>\n","      <td>7.44</td>\n","      <td>6.78</td>\n","      <td>8.34</td>\n","      <td>-2.78</td>\n","      <td>-3.86</td>\n","      <td>-0.63</td>\n","      <td>...</td>\n","      <td>311.4</td>\n","      <td>316.8</td>\n","      <td>12555</td>\n","      <td>10256</td>\n","      <td>16625</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>9</td>\n","      <td>2.333</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-08-17</td>\n","      <td>02:00:00</td>\n","      <td>2023-08-17 02:00:00</td>\n","      <td>1</td>\n","      <td>5.86</td>\n","      <td>5.41</td>\n","      <td>7.00</td>\n","      <td>-1.94</td>\n","      <td>-3.24</td>\n","      <td>-0.14</td>\n","      <td>...</td>\n","      <td>307.2</td>\n","      <td>322.6</td>\n","      <td>17006</td>\n","      <td>14398</td>\n","      <td>27957</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-08-17</td>\n","      <td>03:00:00</td>\n","      <td>2023-08-17 03:00:00</td>\n","      <td>1</td>\n","      <td>6.40</td>\n","      <td>4.40</td>\n","      <td>7.56</td>\n","      <td>-0.84</td>\n","      <td>-4.08</td>\n","      <td>3.91</td>\n","      <td>...</td>\n","      <td>298.8</td>\n","      <td>317.2</td>\n","      <td>28372</td>\n","      <td>20008</td>\n","      <td>40698</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>6</td>\n","      <td>1.667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-08-17</td>\n","      <td>04:00:00</td>\n","      <td>2023-08-17 04:00:00</td>\n","      <td>1</td>\n","      <td>7.24</td>\n","      <td>5.17</td>\n","      <td>7.67</td>\n","      <td>-1.80</td>\n","      <td>-2.70</td>\n","      <td>-1.09</td>\n","      <td>...</td>\n","      <td>313.6</td>\n","      <td>326.3</td>\n","      <td>20563</td>\n","      <td>16439</td>\n","      <td>25790</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>6</td>\n","      <td>1.667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1233</th>\n","      <td>2023-10-07</td>\n","      <td>09:00:00</td>\n","      <td>2023-10-07 09:00:00</td>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>5.41</td>\n","      <td>5.75</td>\n","      <td>-1.38</td>\n","      <td>-1.73</td>\n","      <td>-1.02</td>\n","      <td>...</td>\n","      <td>400.9</td>\n","      <td>441.8</td>\n","      <td>327364</td>\n","      <td>150079</td>\n","      <td>336855</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1234</th>\n","      <td>2023-10-07</td>\n","      <td>10:00:00</td>\n","      <td>2023-10-07 10:00:00</td>\n","      <td>1</td>\n","      <td>5.32</td>\n","      <td>5.09</td>\n","      <td>5.64</td>\n","      <td>0.10</td>\n","      <td>-1.13</td>\n","      <td>0.61</td>\n","      <td>...</td>\n","      <td>350.1</td>\n","      <td>443.0</td>\n","      <td>180254</td>\n","      <td>13068</td>\n","      <td>336487</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1235</th>\n","      <td>2023-10-07</td>\n","      <td>11:00:00</td>\n","      <td>2023-10-07 11:00:00</td>\n","      <td>1</td>\n","      <td>5.36</td>\n","      <td>5.21</td>\n","      <td>5.41</td>\n","      <td>-0.06</td>\n","      <td>-1.18</td>\n","      <td>0.34</td>\n","      <td>...</td>\n","      <td>353.8</td>\n","      <td>477.4</td>\n","      <td>168396</td>\n","      <td>13581</td>\n","      <td>213827</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1236</th>\n","      <td>2023-10-07</td>\n","      <td>12:00:00</td>\n","      <td>2023-10-07 12:00:00</td>\n","      <td>1</td>\n","      <td>5.55</td>\n","      <td>5.31</td>\n","      <td>5.73</td>\n","      <td>-1.06</td>\n","      <td>-2.22</td>\n","      <td>-0.29</td>\n","      <td>...</td>\n","      <td>354.0</td>\n","      <td>478.3</td>\n","      <td>182189</td>\n","      <td>5000</td>\n","      <td>200321</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1237</th>\n","      <td>2023-10-07</td>\n","      <td>13:00:00</td>\n","      <td>2023-10-07 13:00:00</td>\n","      <td>1</td>\n","      <td>5.65</td>\n","      <td>5.45</td>\n","      <td>5.78</td>\n","      <td>-0.94</td>\n","      <td>-2.30</td>\n","      <td>-0.45</td>\n","      <td>...</td>\n","      <td>438.2</td>\n","      <td>480.3</td>\n","      <td>186108</td>\n","      <td>92265</td>\n","      <td>197999</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1238 rows Ã— 36 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b924c1cc-52d5-4a94-82a7-d4cbe5a813c6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b924c1cc-52d5-4a94-82a7-d4cbe5a813c6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b924c1cc-52d5-4a94-82a7-d4cbe5a813c6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-546024fa-df62-4f85-9170-3312faa73bba\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-546024fa-df62-4f85-9170-3312faa73bba')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-546024fa-df62-4f85-9170-3312faa73bba button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":280}]},{"cell_type":"code","source":["merged_data['Kp_value'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iJj2fp_AfBnn","executionInfo":{"status":"ok","timestamp":1696705713321,"user_tz":-330,"elapsed":454,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"6240a83a-6ab5-45a6-f2e1-c55fbe40de38"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.333, 0.   , 1.667, 2.   , 0.333, 1.333, 0.667, 3.   , 1.   ,\n","       3.333, 2.667, 4.333, 4.667, 5.   , 5.333, 3.667, 4.   , 6.333,\n","       6.   , 5.667])"]},"metadata":{},"execution_count":281}]},{"cell_type":"code","source":["merged_data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o5zQpYQiYGzY","executionInfo":{"status":"ok","timestamp":1696705714098,"user_tz":-330,"elapsed":3,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"47801582-8ca5-4ca4-d3a3-d84d9f0f64e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date', 'Time', 'Datetime', 'Source', 'Bt-med', 'Bt-min', 'Bt-max',\n","       'Bx-med', 'Bx-min', 'Bx-max', 'By-med', 'By-min', 'By-max', 'Bz-med',\n","       'Bz-min', 'Bz-max', 'Phi-mean', 'Phi-min', 'Phi-max', 'Theta-med',\n","       'Theta-min', 'Theta-max', 'Dens-med', 'Dens-min', 'Dens-max',\n","       'Speed-med', 'Speed-min', 'Speed-max', 'Temp-med', 'Temp-min',\n","       'Temp-max', 'SN', 'F10.7obs', 'F10.7adj', 'ap_value', 'Kp_value'],\n","      dtype='object')"]},"metadata":{},"execution_count":282}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.figure(figsize=(15, 6))\n","plt.plot(merged_data['Datetime'], merged_data['Kp_value'])\n","plt.title('Time Series Plot of Kp Values')\n","plt.xlabel('Datetime')\n","plt.ylabel('Kp Value')\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":511},"id":"u0UQKn8mbsSr","executionInfo":{"status":"ok","timestamp":1696705716837,"user_tz":-330,"elapsed":6,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"23bc88d9-b1e2-450d-8849-9b590dbae08f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"pD4lyRrnZKK5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import random\n","\n","# Select 5 random unique dates from the dataset\n","random_dates = random.sample(list(merged_data['Date'].unique()), 5)\n","\n","plt.figure(figsize=(15, 10))\n","\n","for i, date in enumerate(random_dates, 1):\n","    plt.subplot(2, 3, i)\n","    data_for_date = merged_data[merged_data['Date'] == date]['Kp_value']\n","    data_for_date.hist()\n","    plt.title(f'Distribution for {date}')\n","    plt.xlabel('Kp Value')\n","    plt.ylabel('Frequency')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":749},"id":"FqQCiy8keQdB","executionInfo":{"status":"ok","timestamp":1696705719779,"user_tz":-330,"elapsed":1146,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"338973cc-a3ce-446d-9a08-9a47764bdcc1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# # Group by 'Date' and replace zeros with the median of the group\n","merged_data['Kp_value'] = merged_data.groupby('Date')['Kp_value'].transform(lambda x: x.replace(0, x.median()))\n","# Group by 'Date' and replace zeros with the mean of the group\n","# merged_data['Kp_value'] = merged_data.groupby('Date')['Kp_value'].transform(lambda x: x.replace(0, x.mean()))"],"metadata":{"id":"kJpuGnOAY_de"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":808},"id":"quLxe7EEZtDe","executionInfo":{"status":"ok","timestamp":1696705734008,"user_tz":-330,"elapsed":763,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"7995c556-59fd-4223-8786-2d58eb4f0d35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date      Time            Datetime  Source  Bt-med  Bt-min  Bt-max  \\\n","0    2023-08-17  00:00:00 2023-08-17 00:00:00       1    7.89    7.21    8.66   \n","1    2023-08-17  01:00:00 2023-08-17 01:00:00       1    7.44    6.78    8.34   \n","2    2023-08-17  02:00:00 2023-08-17 02:00:00       1    5.86    5.41    7.00   \n","3    2023-08-17  03:00:00 2023-08-17 03:00:00       1    6.40    4.40    7.56   \n","4    2023-08-17  04:00:00 2023-08-17 04:00:00       1    7.24    5.17    7.67   \n","...         ...       ...                 ...     ...     ...     ...     ...   \n","1233 2023-10-07  09:00:00 2023-10-07 09:00:00       1    5.60    5.41    5.75   \n","1234 2023-10-07  10:00:00 2023-10-07 10:00:00       1    5.32    5.09    5.64   \n","1235 2023-10-07  11:00:00 2023-10-07 11:00:00       1    5.36    5.21    5.41   \n","1236 2023-10-07  12:00:00 2023-10-07 12:00:00       1    5.55    5.31    5.73   \n","1237 2023-10-07  13:00:00 2023-10-07 13:00:00       1    5.65    5.45    5.78   \n","\n","      Bx-med  Bx-min  Bx-max  ...  Speed-min  Speed-max  Temp-med  Temp-min  \\\n","0      -0.52   -3.56    0.57  ...      303.7      315.4     16786     12124   \n","1      -2.78   -3.86   -0.63  ...      311.4      316.8     12555     10256   \n","2      -1.94   -3.24   -0.14  ...      307.2      322.6     17006     14398   \n","3      -0.84   -4.08    3.91  ...      298.8      317.2     28372     20008   \n","4      -1.80   -2.70   -1.09  ...      313.6      326.3     20563     16439   \n","...      ...     ...     ...  ...        ...        ...       ...       ...   \n","1233   -1.38   -1.73   -1.02  ...      400.9      441.8    327364    150079   \n","1234    0.10   -1.13    0.61  ...      350.1      443.0    180254     13068   \n","1235   -0.06   -1.18    0.34  ...      353.8      477.4    168396     13581   \n","1236   -1.06   -2.22   -0.29  ...      354.0      478.3    182189      5000   \n","1237   -0.94   -2.30   -0.45  ...      438.2      480.3    186108     92265   \n","\n","      Temp-max     SN  F10.7obs  F10.7adj  ap_value  Kp_value  \n","0        19425  146.0     151.9     155.7         9     2.333  \n","1        16625  146.0     151.9     155.7         9     2.333  \n","2        27957  146.0     151.9     155.7         0     1.000  \n","3        40698  146.0     151.9     155.7         6     1.667  \n","4        25790  146.0     151.9     155.7         6     1.667  \n","...        ...    ...       ...       ...       ...       ...  \n","1233    336855    NaN       NaN       NaN         0     0.000  \n","1234    336487    NaN       NaN       NaN         0     0.000  \n","1235    213827    NaN       NaN       NaN         0     0.000  \n","1236    200321    NaN       NaN       NaN         0     0.000  \n","1237    197999    NaN       NaN       NaN         0     0.000  \n","\n","[1238 rows x 36 columns]"],"text/html":["\n","  <div id=\"df-92715165-c6ea-49f0-824f-3053eb75d024\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Datetime</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>...</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>SN</th>\n","      <th>F10.7obs</th>\n","      <th>F10.7adj</th>\n","      <th>ap_value</th>\n","      <th>Kp_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-08-17</td>\n","      <td>00:00:00</td>\n","      <td>2023-08-17 00:00:00</td>\n","      <td>1</td>\n","      <td>7.89</td>\n","      <td>7.21</td>\n","      <td>8.66</td>\n","      <td>-0.52</td>\n","      <td>-3.56</td>\n","      <td>0.57</td>\n","      <td>...</td>\n","      <td>303.7</td>\n","      <td>315.4</td>\n","      <td>16786</td>\n","      <td>12124</td>\n","      <td>19425</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>9</td>\n","      <td>2.333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-08-17</td>\n","      <td>01:00:00</td>\n","      <td>2023-08-17 01:00:00</td>\n","      <td>1</td>\n","      <td>7.44</td>\n","      <td>6.78</td>\n","      <td>8.34</td>\n","      <td>-2.78</td>\n","      <td>-3.86</td>\n","      <td>-0.63</td>\n","      <td>...</td>\n","      <td>311.4</td>\n","      <td>316.8</td>\n","      <td>12555</td>\n","      <td>10256</td>\n","      <td>16625</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>9</td>\n","      <td>2.333</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-08-17</td>\n","      <td>02:00:00</td>\n","      <td>2023-08-17 02:00:00</td>\n","      <td>1</td>\n","      <td>5.86</td>\n","      <td>5.41</td>\n","      <td>7.00</td>\n","      <td>-1.94</td>\n","      <td>-3.24</td>\n","      <td>-0.14</td>\n","      <td>...</td>\n","      <td>307.2</td>\n","      <td>322.6</td>\n","      <td>17006</td>\n","      <td>14398</td>\n","      <td>27957</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>0</td>\n","      <td>1.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-08-17</td>\n","      <td>03:00:00</td>\n","      <td>2023-08-17 03:00:00</td>\n","      <td>1</td>\n","      <td>6.40</td>\n","      <td>4.40</td>\n","      <td>7.56</td>\n","      <td>-0.84</td>\n","      <td>-4.08</td>\n","      <td>3.91</td>\n","      <td>...</td>\n","      <td>298.8</td>\n","      <td>317.2</td>\n","      <td>28372</td>\n","      <td>20008</td>\n","      <td>40698</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>6</td>\n","      <td>1.667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-08-17</td>\n","      <td>04:00:00</td>\n","      <td>2023-08-17 04:00:00</td>\n","      <td>1</td>\n","      <td>7.24</td>\n","      <td>5.17</td>\n","      <td>7.67</td>\n","      <td>-1.80</td>\n","      <td>-2.70</td>\n","      <td>-1.09</td>\n","      <td>...</td>\n","      <td>313.6</td>\n","      <td>326.3</td>\n","      <td>20563</td>\n","      <td>16439</td>\n","      <td>25790</td>\n","      <td>146.0</td>\n","      <td>151.9</td>\n","      <td>155.7</td>\n","      <td>6</td>\n","      <td>1.667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1233</th>\n","      <td>2023-10-07</td>\n","      <td>09:00:00</td>\n","      <td>2023-10-07 09:00:00</td>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>5.41</td>\n","      <td>5.75</td>\n","      <td>-1.38</td>\n","      <td>-1.73</td>\n","      <td>-1.02</td>\n","      <td>...</td>\n","      <td>400.9</td>\n","      <td>441.8</td>\n","      <td>327364</td>\n","      <td>150079</td>\n","      <td>336855</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1234</th>\n","      <td>2023-10-07</td>\n","      <td>10:00:00</td>\n","      <td>2023-10-07 10:00:00</td>\n","      <td>1</td>\n","      <td>5.32</td>\n","      <td>5.09</td>\n","      <td>5.64</td>\n","      <td>0.10</td>\n","      <td>-1.13</td>\n","      <td>0.61</td>\n","      <td>...</td>\n","      <td>350.1</td>\n","      <td>443.0</td>\n","      <td>180254</td>\n","      <td>13068</td>\n","      <td>336487</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1235</th>\n","      <td>2023-10-07</td>\n","      <td>11:00:00</td>\n","      <td>2023-10-07 11:00:00</td>\n","      <td>1</td>\n","      <td>5.36</td>\n","      <td>5.21</td>\n","      <td>5.41</td>\n","      <td>-0.06</td>\n","      <td>-1.18</td>\n","      <td>0.34</td>\n","      <td>...</td>\n","      <td>353.8</td>\n","      <td>477.4</td>\n","      <td>168396</td>\n","      <td>13581</td>\n","      <td>213827</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1236</th>\n","      <td>2023-10-07</td>\n","      <td>12:00:00</td>\n","      <td>2023-10-07 12:00:00</td>\n","      <td>1</td>\n","      <td>5.55</td>\n","      <td>5.31</td>\n","      <td>5.73</td>\n","      <td>-1.06</td>\n","      <td>-2.22</td>\n","      <td>-0.29</td>\n","      <td>...</td>\n","      <td>354.0</td>\n","      <td>478.3</td>\n","      <td>182189</td>\n","      <td>5000</td>\n","      <td>200321</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1237</th>\n","      <td>2023-10-07</td>\n","      <td>13:00:00</td>\n","      <td>2023-10-07 13:00:00</td>\n","      <td>1</td>\n","      <td>5.65</td>\n","      <td>5.45</td>\n","      <td>5.78</td>\n","      <td>-0.94</td>\n","      <td>-2.30</td>\n","      <td>-0.45</td>\n","      <td>...</td>\n","      <td>438.2</td>\n","      <td>480.3</td>\n","      <td>186108</td>\n","      <td>92265</td>\n","      <td>197999</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1238 rows Ã— 36 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92715165-c6ea-49f0-824f-3053eb75d024')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-92715165-c6ea-49f0-824f-3053eb75d024 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-92715165-c6ea-49f0-824f-3053eb75d024');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-489213f6-9fae-4a9b-a0e8-c7939885d4cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-489213f6-9fae-4a9b-a0e8-c7939885d4cf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-489213f6-9fae-4a9b-a0e8-c7939885d4cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":288}]},{"cell_type":"code","source":["sorted_unique_values = np.sort(merged_data[\"Kp_value\"].unique())\n","print(sorted_unique_values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NJNXOb84W0WU","executionInfo":{"status":"ok","timestamp":1696705735790,"user_tz":-330,"elapsed":3,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"0d187dce-7bf9-4675-bd5a-f8a7590b5294"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.     0.1665 0.333  0.5    0.667  0.8335 1.     1.1665 1.167  1.333\n"," 1.3335 1.5    1.6665 1.667  1.8335 2.     2.333  2.3335 2.5    2.667\n"," 3.     3.333  3.5    3.667  4.     4.333  4.667  5.     5.333  5.667\n"," 6.     6.333 ]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.figure(figsize=(15, 6))\n","plt.plot(merged_data['Datetime'], merged_data['Kp_value'])\n","plt.title('Time Series Plot of Kp Values')\n","plt.xlabel('Datetime')\n","plt.ylabel('Kp Value')\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":584},"id":"XC4wJin2b21w","executionInfo":{"status":"ok","timestamp":1696705738710,"user_tz":-330,"elapsed":1170,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"d962a8c7-7b9e-417a-e4e6-33f606a7abe2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import random\n","\n","# Select 5 random unique dates from the dataset\n","random_dates = random.sample(list(merged_data['Date'].unique()), 5)\n","\n","plt.figure(figsize=(15, 10))\n","\n","for i, date in enumerate(random_dates, 1):\n","    plt.subplot(2, 3, i)\n","    data_for_date = merged_data[merged_data['Date'] == date]['Kp_value']\n","    data_for_date.hist()\n","    plt.title(f'Distribution for {date}')\n","    plt.xlabel('Kp Value')\n","    plt.ylabel('Frequency')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":749},"id":"RrcaCDkwhra6","executionInfo":{"status":"ok","timestamp":1696706220260,"user_tz":-330,"elapsed":2790,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"7b2720d0-2d9c-47b2-88a0-2ecae4a0a3ac"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Save the dataframe to a .csv file\n","merged_data.to_csv(\"/content/drive/MyDrive/NASA Hackathon/Datasets/Final Datasets/hourwise_dataset.csv\", index=False)"],"metadata":{"id":"Wf9hQeECWA8-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Dataset - 2 : 5 years : 1 day"],"metadata":{"id":"idis3tv8ks0p"}},{"cell_type":"code","source":["timestamp_dtype = data[\"Timestamp\"].dtype\n","print(timestamp_dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xuHx7GRykzqY","executionInfo":{"status":"ok","timestamp":1696706407659,"user_tz":-330,"elapsed":526,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"63514057-0a3d-4961-8f54-0b72d103d848"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["object\n"]}]},{"cell_type":"code","source":["data[\"Timestamp\"] = data[\"Timestamp\"].astype(str)"],"metadata":{"id":"A4q_JPyfk71l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data[\"Date\"] = data[\"Timestamp\"].str.split(\" \").str[0]\n","data[\"Time\"] = data[\"Timestamp\"].str.split(\" \").str[1]"],"metadata":{"id":"RY4ru7dxk-fG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"iWpV584plUBv","executionInfo":{"status":"ok","timestamp":1696706417483,"user_tz":-330,"elapsed":729,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"cb474e2e-2797-48d2-ba78-61d63c11cb69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Timestamp  Source    Bt-med    Bt-min    Bt-max    Bx-med  \\\n","0     2019-05-04 00:00:00       1      4.35      2.24     11.02      2.11   \n","1     2019-05-05 00:00:00       1      3.46      1.62      4.20      1.86   \n","2     2019-05-06 00:00:00       1      4.01      2.73      5.13      1.86   \n","3     2019-05-07 00:00:00       1      3.73      1.28      4.70      2.13   \n","4     2019-05-08 00:00:00       1      2.62      0.86      3.37      2.18   \n","...                   ...     ...       ...       ...       ...       ...   \n","1442  2023-10-02 00:00:00       1 -99999.00 -99999.00 -99999.00 -99999.00   \n","1443  2023-10-03 00:00:00       1      7.58      5.56      8.60     -6.37   \n","1444  2023-10-04 00:00:00       1      7.82      5.73      9.41     -3.49   \n","1445  2023-10-05 00:00:00       1      4.36      2.17      7.49      0.30   \n","1446  2023-10-06 00:00:00       1      5.98      1.76      7.95      0.61   \n","\n","        Bx-min    Bx-max    By-med    By-min  ...  Dens-min  Dens-max  \\\n","0        -4.73     10.15     -1.58     -7.00  ...      3.50      9.10   \n","1        -3.46      3.93     -1.51     -3.62  ...      1.27      5.85   \n","2        -2.55      4.80     -2.31     -4.59  ...      2.11      7.36   \n","3        -1.02      3.94     -0.70     -4.21  ...      2.37     11.02   \n","4         0.59      3.09     -0.03     -1.08  ...      8.17     16.65   \n","...        ...       ...       ...       ...  ...       ...       ...   \n","1442 -99999.00 -99999.00 -99999.00 -99999.00  ... -99999.00 -99999.00   \n","1443     -7.91      1.71      1.70     -4.47  ...      1.76      9.68   \n","1444     -7.42      1.88      5.80     -1.07  ...      0.91      7.22   \n","1445     -4.48      4.09      1.79     -4.80  ...      4.05     13.25   \n","1446     -3.91      5.45      2.92     -5.43  ...      3.08     16.48   \n","\n","      Speed-med  Speed-min  Speed-max  Temp-med  Temp-min  Temp-max  \\\n","0         482.0      391.5      515.4    179360     55436    303319   \n","1         434.4      359.7      494.9    122091     25719    334905   \n","2         374.0      322.5      392.8     43075     12791     75843   \n","3         351.9      327.4      382.2     29746     11704     55111   \n","4         326.4      307.4      341.5     12476      7815     16210   \n","...         ...        ...        ...       ...       ...       ...   \n","1442   -99999.0   -99999.0   -99999.0    -99999    -99999    -99999   \n","1443      339.3      314.3      436.6     62372     10025    209472   \n","1444      407.1      328.4      474.4    121306      6533    464060   \n","1445      453.0      428.9      490.0    176874     67577    242981   \n","1446      418.8      375.8      475.8     61374     14814    209840   \n","\n","            Date      Time  \n","0     2019-05-04  00:00:00  \n","1     2019-05-05  00:00:00  \n","2     2019-05-06  00:00:00  \n","3     2019-05-07  00:00:00  \n","4     2019-05-08  00:00:00  \n","...          ...       ...  \n","1442  2023-10-02  00:00:00  \n","1443  2023-10-03  00:00:00  \n","1444  2023-10-04  00:00:00  \n","1445  2023-10-05  00:00:00  \n","1446  2023-10-06  00:00:00  \n","\n","[1447 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-e78365fb-4443-4eeb-b2d1-f52b52413194\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-05-04 00:00:00</td>\n","      <td>1</td>\n","      <td>4.35</td>\n","      <td>2.24</td>\n","      <td>11.02</td>\n","      <td>2.11</td>\n","      <td>-4.73</td>\n","      <td>10.15</td>\n","      <td>-1.58</td>\n","      <td>-7.00</td>\n","      <td>...</td>\n","      <td>3.50</td>\n","      <td>9.10</td>\n","      <td>482.0</td>\n","      <td>391.5</td>\n","      <td>515.4</td>\n","      <td>179360</td>\n","      <td>55436</td>\n","      <td>303319</td>\n","      <td>2019-05-04</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-05 00:00:00</td>\n","      <td>1</td>\n","      <td>3.46</td>\n","      <td>1.62</td>\n","      <td>4.20</td>\n","      <td>1.86</td>\n","      <td>-3.46</td>\n","      <td>3.93</td>\n","      <td>-1.51</td>\n","      <td>-3.62</td>\n","      <td>...</td>\n","      <td>1.27</td>\n","      <td>5.85</td>\n","      <td>434.4</td>\n","      <td>359.7</td>\n","      <td>494.9</td>\n","      <td>122091</td>\n","      <td>25719</td>\n","      <td>334905</td>\n","      <td>2019-05-05</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-05-06 00:00:00</td>\n","      <td>1</td>\n","      <td>4.01</td>\n","      <td>2.73</td>\n","      <td>5.13</td>\n","      <td>1.86</td>\n","      <td>-2.55</td>\n","      <td>4.80</td>\n","      <td>-2.31</td>\n","      <td>-4.59</td>\n","      <td>...</td>\n","      <td>2.11</td>\n","      <td>7.36</td>\n","      <td>374.0</td>\n","      <td>322.5</td>\n","      <td>392.8</td>\n","      <td>43075</td>\n","      <td>12791</td>\n","      <td>75843</td>\n","      <td>2019-05-06</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-07 00:00:00</td>\n","      <td>1</td>\n","      <td>3.73</td>\n","      <td>1.28</td>\n","      <td>4.70</td>\n","      <td>2.13</td>\n","      <td>-1.02</td>\n","      <td>3.94</td>\n","      <td>-0.70</td>\n","      <td>-4.21</td>\n","      <td>...</td>\n","      <td>2.37</td>\n","      <td>11.02</td>\n","      <td>351.9</td>\n","      <td>327.4</td>\n","      <td>382.2</td>\n","      <td>29746</td>\n","      <td>11704</td>\n","      <td>55111</td>\n","      <td>2019-05-07</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-05-08 00:00:00</td>\n","      <td>1</td>\n","      <td>2.62</td>\n","      <td>0.86</td>\n","      <td>3.37</td>\n","      <td>2.18</td>\n","      <td>0.59</td>\n","      <td>3.09</td>\n","      <td>-0.03</td>\n","      <td>-1.08</td>\n","      <td>...</td>\n","      <td>8.17</td>\n","      <td>16.65</td>\n","      <td>326.4</td>\n","      <td>307.4</td>\n","      <td>341.5</td>\n","      <td>12476</td>\n","      <td>7815</td>\n","      <td>16210</td>\n","      <td>2019-05-08</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1442</th>\n","      <td>2023-10-02 00:00:00</td>\n","      <td>1</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>...</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.0</td>\n","      <td>-99999.0</td>\n","      <td>-99999.0</td>\n","      <td>-99999</td>\n","      <td>-99999</td>\n","      <td>-99999</td>\n","      <td>2023-10-02</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1443</th>\n","      <td>2023-10-03 00:00:00</td>\n","      <td>1</td>\n","      <td>7.58</td>\n","      <td>5.56</td>\n","      <td>8.60</td>\n","      <td>-6.37</td>\n","      <td>-7.91</td>\n","      <td>1.71</td>\n","      <td>1.70</td>\n","      <td>-4.47</td>\n","      <td>...</td>\n","      <td>1.76</td>\n","      <td>9.68</td>\n","      <td>339.3</td>\n","      <td>314.3</td>\n","      <td>436.6</td>\n","      <td>62372</td>\n","      <td>10025</td>\n","      <td>209472</td>\n","      <td>2023-10-03</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1444</th>\n","      <td>2023-10-04 00:00:00</td>\n","      <td>1</td>\n","      <td>7.82</td>\n","      <td>5.73</td>\n","      <td>9.41</td>\n","      <td>-3.49</td>\n","      <td>-7.42</td>\n","      <td>1.88</td>\n","      <td>5.80</td>\n","      <td>-1.07</td>\n","      <td>...</td>\n","      <td>0.91</td>\n","      <td>7.22</td>\n","      <td>407.1</td>\n","      <td>328.4</td>\n","      <td>474.4</td>\n","      <td>121306</td>\n","      <td>6533</td>\n","      <td>464060</td>\n","      <td>2023-10-04</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1445</th>\n","      <td>2023-10-05 00:00:00</td>\n","      <td>1</td>\n","      <td>4.36</td>\n","      <td>2.17</td>\n","      <td>7.49</td>\n","      <td>0.30</td>\n","      <td>-4.48</td>\n","      <td>4.09</td>\n","      <td>1.79</td>\n","      <td>-4.80</td>\n","      <td>...</td>\n","      <td>4.05</td>\n","      <td>13.25</td>\n","      <td>453.0</td>\n","      <td>428.9</td>\n","      <td>490.0</td>\n","      <td>176874</td>\n","      <td>67577</td>\n","      <td>242981</td>\n","      <td>2023-10-05</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1446</th>\n","      <td>2023-10-06 00:00:00</td>\n","      <td>1</td>\n","      <td>5.98</td>\n","      <td>1.76</td>\n","      <td>7.95</td>\n","      <td>0.61</td>\n","      <td>-3.91</td>\n","      <td>5.45</td>\n","      <td>2.92</td>\n","      <td>-5.43</td>\n","      <td>...</td>\n","      <td>3.08</td>\n","      <td>16.48</td>\n","      <td>418.8</td>\n","      <td>375.8</td>\n","      <td>475.8</td>\n","      <td>61374</td>\n","      <td>14814</td>\n","      <td>209840</td>\n","      <td>2023-10-06</td>\n","      <td>00:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1447 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e78365fb-4443-4eeb-b2d1-f52b52413194')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e78365fb-4443-4eeb-b2d1-f52b52413194 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e78365fb-4443-4eeb-b2d1-f52b52413194');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-db85d6b8-db06-40ec-b54e-254d9ed75741\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db85d6b8-db06-40ec-b54e-254d9ed75741')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-db85d6b8-db06-40ec-b54e-254d9ed75741 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":303}]},{"cell_type":"code","source":["data5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Ohpcs0xjm2I9","executionInfo":{"status":"ok","timestamp":1696706835599,"user_tz":-330,"elapsed":1103,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"6fe04815-e329-4f68-f28b-50dee2e8a30e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         YYY  MM  DD  hh.h  hh._m       days      days_m     Kp  ap  D  \\\n","0       1932   1   1   0.0    1.5      0.000      0.0625  3.333  18  1   \n","1       1932   1   1   3.0    4.5      0.125      0.1875  2.667  12  1   \n","2       1932   1   1   6.0    7.5      0.250      0.3125  2.333   9  1   \n","3       1932   1   1   9.0   10.5      0.375      0.4375  2.667  12  1   \n","4       1932   1   1  12.0   13.5      0.500      0.5625  3.333  18  1   \n","...      ...  ..  ..   ...    ...        ...         ...    ...  .. ..   \n","268131  2023  10   6   9.0   10.5  33516.375  33516.4375  1.333   5  0   \n","268132  2023  10   6  12.0   13.5  33516.500  33516.5625  1.000   4  0   \n","268133  2023  10   6  15.0   16.5  33516.625  33516.6875  1.333   5  0   \n","268134  2023  10   6  18.0   19.5  33516.750  33516.8125  0.667   3  0   \n","268135  2023  10   6  21.0   22.5  33516.875  33516.9375  3.000  15  0   \n","\n","                     Start                 End  \n","0      1932-01-01 00:00:00 1932-01-01 01:50:00  \n","1      1932-01-01 03:00:00 1932-01-01 04:50:00  \n","2      1932-01-01 06:00:00 1932-01-01 07:50:00  \n","3      1932-01-01 09:00:00 1932-01-01 10:50:00  \n","4      1932-01-01 12:00:00 1932-01-01 13:50:00  \n","...                    ...                 ...  \n","268131 2023-10-06 09:00:00 2023-10-06 10:50:00  \n","268132 2023-10-06 12:00:00 2023-10-06 13:50:00  \n","268133 2023-10-06 15:00:00 2023-10-06 16:50:00  \n","268134 2023-10-06 18:00:00 2023-10-06 19:50:00  \n","268135 2023-10-06 21:00:00 2023-10-06 22:50:00  \n","\n","[268136 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-d0a3aab5-2813-483d-b066-aaaf8b28b7a7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YYY</th>\n","      <th>MM</th>\n","      <th>DD</th>\n","      <th>hh.h</th>\n","      <th>hh._m</th>\n","      <th>days</th>\n","      <th>days_m</th>\n","      <th>Kp</th>\n","      <th>ap</th>\n","      <th>D</th>\n","      <th>Start</th>\n","      <th>End</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>0.000</td>\n","      <td>0.0625</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1932-01-01 00:00:00</td>\n","      <td>1932-01-01 01:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>4.5</td>\n","      <td>0.125</td>\n","      <td>0.1875</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>1932-01-01 03:00:00</td>\n","      <td>1932-01-01 04:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>7.5</td>\n","      <td>0.250</td>\n","      <td>0.3125</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1932-01-01 06:00:00</td>\n","      <td>1932-01-01 07:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","      <td>10.5</td>\n","      <td>0.375</td>\n","      <td>0.4375</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>1932-01-01 09:00:00</td>\n","      <td>1932-01-01 10:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1932</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","      <td>13.5</td>\n","      <td>0.500</td>\n","      <td>0.5625</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1932-01-01 12:00:00</td>\n","      <td>1932-01-01 13:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>268131</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>9.0</td>\n","      <td>10.5</td>\n","      <td>33516.375</td>\n","      <td>33516.4375</td>\n","      <td>1.333</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>2023-10-06 09:00:00</td>\n","      <td>2023-10-06 10:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268132</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>12.0</td>\n","      <td>13.5</td>\n","      <td>33516.500</td>\n","      <td>33516.5625</td>\n","      <td>1.000</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>2023-10-06 13:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268133</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>15.0</td>\n","      <td>16.5</td>\n","      <td>33516.625</td>\n","      <td>33516.6875</td>\n","      <td>1.333</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>2023-10-06 15:00:00</td>\n","      <td>2023-10-06 16:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268134</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>18.0</td>\n","      <td>19.5</td>\n","      <td>33516.750</td>\n","      <td>33516.8125</td>\n","      <td>0.667</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>2023-10-06 19:50:00</td>\n","    </tr>\n","    <tr>\n","      <th>268135</th>\n","      <td>2023</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>21.0</td>\n","      <td>22.5</td>\n","      <td>33516.875</td>\n","      <td>33516.9375</td>\n","      <td>3.000</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>2023-10-06 21:00:00</td>\n","      <td>2023-10-06 22:50:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>268136 rows Ã— 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0a3aab5-2813-483d-b066-aaaf8b28b7a7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d0a3aab5-2813-483d-b066-aaaf8b28b7a7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d0a3aab5-2813-483d-b066-aaaf8b28b7a7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-96d3aaae-cbc7-4ca6-a17e-4a9ca062f2b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96d3aaae-cbc7-4ca6-a17e-4a9ca062f2b8')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-96d3aaae-cbc7-4ca6-a17e-4a9ca062f2b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":306}]},{"cell_type":"code","source":["data['Date'] = pd.to_datetime(data['Date'])"],"metadata":{"id":"aKRIBziEn2WC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a 'Date' column in data5 by combining 'YYY', 'MM', and 'DD' and then converting to datetime\n","data5['Date'] = pd.to_datetime(data5['YYY'].astype(str) + '-' + data5['MM'].astype(str) + '-' + data5['DD'].astype(str))\n","\n","# Group by 'Date' and get the max values of 'Kp' and 'ap'\n","aggregated_data5 = data5.groupby('Date').agg({'Kp': 'max', 'ap': 'max'}).reset_index()\n","\n","# Merge the aggregated data with the 'data' dataframe on 'Date'\n","merged_data = pd.merge(data, aggregated_data5, on='Date', how='left', suffixes=('', '_max'))"],"metadata":{"id":"5Rw9FwNwlWz5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"_-007a8Gn49Q","executionInfo":{"status":"ok","timestamp":1696707115663,"user_tz":-330,"elapsed":521,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"92959294-ad08-4b11-896c-14ad34674d7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Timestamp  Source    Bt-med    Bt-min    Bt-max    Bx-med  \\\n","0     2019-05-04 00:00:00       1      4.35      2.24     11.02      2.11   \n","1     2019-05-05 00:00:00       1      3.46      1.62      4.20      1.86   \n","2     2019-05-06 00:00:00       1      4.01      2.73      5.13      1.86   \n","3     2019-05-07 00:00:00       1      3.73      1.28      4.70      2.13   \n","4     2019-05-08 00:00:00       1      2.62      0.86      3.37      2.18   \n","...                   ...     ...       ...       ...       ...       ...   \n","1442  2023-10-02 00:00:00       1 -99999.00 -99999.00 -99999.00 -99999.00   \n","1443  2023-10-03 00:00:00       1      7.58      5.56      8.60     -6.37   \n","1444  2023-10-04 00:00:00       1      7.82      5.73      9.41     -3.49   \n","1445  2023-10-05 00:00:00       1      4.36      2.17      7.49      0.30   \n","1446  2023-10-06 00:00:00       1      5.98      1.76      7.95      0.61   \n","\n","        Bx-min    Bx-max    By-med    By-min  ...  Speed-med  Speed-min  \\\n","0        -4.73     10.15     -1.58     -7.00  ...      482.0      391.5   \n","1        -3.46      3.93     -1.51     -3.62  ...      434.4      359.7   \n","2        -2.55      4.80     -2.31     -4.59  ...      374.0      322.5   \n","3        -1.02      3.94     -0.70     -4.21  ...      351.9      327.4   \n","4         0.59      3.09     -0.03     -1.08  ...      326.4      307.4   \n","...        ...       ...       ...       ...  ...        ...        ...   \n","1442 -99999.00 -99999.00 -99999.00 -99999.00  ...   -99999.0   -99999.0   \n","1443     -7.91      1.71      1.70     -4.47  ...      339.3      314.3   \n","1444     -7.42      1.88      5.80     -1.07  ...      407.1      328.4   \n","1445     -4.48      4.09      1.79     -4.80  ...      453.0      428.9   \n","1446     -3.91      5.45      2.92     -5.43  ...      418.8      375.8   \n","\n","      Speed-max  Temp-med  Temp-min  Temp-max       Date      Time     Kp  ap  \n","0         515.4    179360     55436    303319 2019-05-04  00:00:00  2.667  12  \n","1         494.9    122091     25719    334905 2019-05-05  00:00:00  1.333   5  \n","2         392.8     43075     12791     75843 2019-05-06  00:00:00  1.667   6  \n","3         382.2     29746     11704     55111 2019-05-07  00:00:00  2.000   7  \n","4         341.5     12476      7815     16210 2019-05-08  00:00:00  1.000   4  \n","...         ...       ...       ...       ...        ...       ...    ...  ..  \n","1442   -99999.0    -99999    -99999    -99999 2023-10-02  00:00:00  3.333  18  \n","1443      436.6     62372     10025    209472 2023-10-03  00:00:00  2.333   9  \n","1444      474.4    121306      6533    464060 2023-10-04  00:00:00  3.667  22  \n","1445      490.0    176874     67577    242981 2023-10-05  00:00:00  5.000  48  \n","1446      475.8     61374     14814    209840 2023-10-06  00:00:00  3.000  15  \n","\n","[1447 rows x 33 columns]"],"text/html":["\n","  <div id=\"df-7d584a7f-c31b-4ab8-9181-9e4014283f44\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Kp</th>\n","      <th>ap</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-05-04 00:00:00</td>\n","      <td>1</td>\n","      <td>4.35</td>\n","      <td>2.24</td>\n","      <td>11.02</td>\n","      <td>2.11</td>\n","      <td>-4.73</td>\n","      <td>10.15</td>\n","      <td>-1.58</td>\n","      <td>-7.00</td>\n","      <td>...</td>\n","      <td>482.0</td>\n","      <td>391.5</td>\n","      <td>515.4</td>\n","      <td>179360</td>\n","      <td>55436</td>\n","      <td>303319</td>\n","      <td>2019-05-04</td>\n","      <td>00:00:00</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-05 00:00:00</td>\n","      <td>1</td>\n","      <td>3.46</td>\n","      <td>1.62</td>\n","      <td>4.20</td>\n","      <td>1.86</td>\n","      <td>-3.46</td>\n","      <td>3.93</td>\n","      <td>-1.51</td>\n","      <td>-3.62</td>\n","      <td>...</td>\n","      <td>434.4</td>\n","      <td>359.7</td>\n","      <td>494.9</td>\n","      <td>122091</td>\n","      <td>25719</td>\n","      <td>334905</td>\n","      <td>2019-05-05</td>\n","      <td>00:00:00</td>\n","      <td>1.333</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-05-06 00:00:00</td>\n","      <td>1</td>\n","      <td>4.01</td>\n","      <td>2.73</td>\n","      <td>5.13</td>\n","      <td>1.86</td>\n","      <td>-2.55</td>\n","      <td>4.80</td>\n","      <td>-2.31</td>\n","      <td>-4.59</td>\n","      <td>...</td>\n","      <td>374.0</td>\n","      <td>322.5</td>\n","      <td>392.8</td>\n","      <td>43075</td>\n","      <td>12791</td>\n","      <td>75843</td>\n","      <td>2019-05-06</td>\n","      <td>00:00:00</td>\n","      <td>1.667</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-07 00:00:00</td>\n","      <td>1</td>\n","      <td>3.73</td>\n","      <td>1.28</td>\n","      <td>4.70</td>\n","      <td>2.13</td>\n","      <td>-1.02</td>\n","      <td>3.94</td>\n","      <td>-0.70</td>\n","      <td>-4.21</td>\n","      <td>...</td>\n","      <td>351.9</td>\n","      <td>327.4</td>\n","      <td>382.2</td>\n","      <td>29746</td>\n","      <td>11704</td>\n","      <td>55111</td>\n","      <td>2019-05-07</td>\n","      <td>00:00:00</td>\n","      <td>2.000</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-05-08 00:00:00</td>\n","      <td>1</td>\n","      <td>2.62</td>\n","      <td>0.86</td>\n","      <td>3.37</td>\n","      <td>2.18</td>\n","      <td>0.59</td>\n","      <td>3.09</td>\n","      <td>-0.03</td>\n","      <td>-1.08</td>\n","      <td>...</td>\n","      <td>326.4</td>\n","      <td>307.4</td>\n","      <td>341.5</td>\n","      <td>12476</td>\n","      <td>7815</td>\n","      <td>16210</td>\n","      <td>2019-05-08</td>\n","      <td>00:00:00</td>\n","      <td>1.000</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1442</th>\n","      <td>2023-10-02 00:00:00</td>\n","      <td>1</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>...</td>\n","      <td>-99999.0</td>\n","      <td>-99999.0</td>\n","      <td>-99999.0</td>\n","      <td>-99999</td>\n","      <td>-99999</td>\n","      <td>-99999</td>\n","      <td>2023-10-02</td>\n","      <td>00:00:00</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>1443</th>\n","      <td>2023-10-03 00:00:00</td>\n","      <td>1</td>\n","      <td>7.58</td>\n","      <td>5.56</td>\n","      <td>8.60</td>\n","      <td>-6.37</td>\n","      <td>-7.91</td>\n","      <td>1.71</td>\n","      <td>1.70</td>\n","      <td>-4.47</td>\n","      <td>...</td>\n","      <td>339.3</td>\n","      <td>314.3</td>\n","      <td>436.6</td>\n","      <td>62372</td>\n","      <td>10025</td>\n","      <td>209472</td>\n","      <td>2023-10-03</td>\n","      <td>00:00:00</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1444</th>\n","      <td>2023-10-04 00:00:00</td>\n","      <td>1</td>\n","      <td>7.82</td>\n","      <td>5.73</td>\n","      <td>9.41</td>\n","      <td>-3.49</td>\n","      <td>-7.42</td>\n","      <td>1.88</td>\n","      <td>5.80</td>\n","      <td>-1.07</td>\n","      <td>...</td>\n","      <td>407.1</td>\n","      <td>328.4</td>\n","      <td>474.4</td>\n","      <td>121306</td>\n","      <td>6533</td>\n","      <td>464060</td>\n","      <td>2023-10-04</td>\n","      <td>00:00:00</td>\n","      <td>3.667</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>1445</th>\n","      <td>2023-10-05 00:00:00</td>\n","      <td>1</td>\n","      <td>4.36</td>\n","      <td>2.17</td>\n","      <td>7.49</td>\n","      <td>0.30</td>\n","      <td>-4.48</td>\n","      <td>4.09</td>\n","      <td>1.79</td>\n","      <td>-4.80</td>\n","      <td>...</td>\n","      <td>453.0</td>\n","      <td>428.9</td>\n","      <td>490.0</td>\n","      <td>176874</td>\n","      <td>67577</td>\n","      <td>242981</td>\n","      <td>2023-10-05</td>\n","      <td>00:00:00</td>\n","      <td>5.000</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>1446</th>\n","      <td>2023-10-06 00:00:00</td>\n","      <td>1</td>\n","      <td>5.98</td>\n","      <td>1.76</td>\n","      <td>7.95</td>\n","      <td>0.61</td>\n","      <td>-3.91</td>\n","      <td>5.45</td>\n","      <td>2.92</td>\n","      <td>-5.43</td>\n","      <td>...</td>\n","      <td>418.8</td>\n","      <td>375.8</td>\n","      <td>475.8</td>\n","      <td>61374</td>\n","      <td>14814</td>\n","      <td>209840</td>\n","      <td>2023-10-06</td>\n","      <td>00:00:00</td>\n","      <td>3.000</td>\n","      <td>15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1447 rows Ã— 33 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d584a7f-c31b-4ab8-9181-9e4014283f44')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d584a7f-c31b-4ab8-9181-9e4014283f44 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d584a7f-c31b-4ab8-9181-9e4014283f44');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-758fc202-9545-4d04-b86b-c4f736fc76a1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-758fc202-9545-4d04-b86b-c4f736fc76a1')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-758fc202-9545-4d04-b86b-c4f736fc76a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":312}]},{"cell_type":"code","source":["# Assuming data4 already has a 'Date' column, proceed to merge the required columns from data4 with data\n","merged_data = pd.merge(merged_data, data4[['Date', 'SN', 'F10.7obs', 'F10.7adj']], on='Date', how='left')"],"metadata":{"id":"r7i5LmgPoBa8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"302qIJ0SoK3E","executionInfo":{"status":"ok","timestamp":1696707170749,"user_tz":-330,"elapsed":868,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"d7a3dd51-69cb-444d-c071-995cb7b6df70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Timestamp  Source    Bt-med    Bt-min    Bt-max    Bx-med  \\\n","0     2019-05-04 00:00:00       1      4.35      2.24     11.02      2.11   \n","1     2019-05-05 00:00:00       1      3.46      1.62      4.20      1.86   \n","2     2019-05-06 00:00:00       1      4.01      2.73      5.13      1.86   \n","3     2019-05-07 00:00:00       1      3.73      1.28      4.70      2.13   \n","4     2019-05-08 00:00:00       1      2.62      0.86      3.37      2.18   \n","...                   ...     ...       ...       ...       ...       ...   \n","1442  2023-10-02 00:00:00       1 -99999.00 -99999.00 -99999.00 -99999.00   \n","1443  2023-10-03 00:00:00       1      7.58      5.56      8.60     -6.37   \n","1444  2023-10-04 00:00:00       1      7.82      5.73      9.41     -3.49   \n","1445  2023-10-05 00:00:00       1      4.36      2.17      7.49      0.30   \n","1446  2023-10-06 00:00:00       1      5.98      1.76      7.95      0.61   \n","\n","        Bx-min    Bx-max    By-med    By-min  ...  Temp-med  Temp-min  \\\n","0        -4.73     10.15     -1.58     -7.00  ...    179360     55436   \n","1        -3.46      3.93     -1.51     -3.62  ...    122091     25719   \n","2        -2.55      4.80     -2.31     -4.59  ...     43075     12791   \n","3        -1.02      3.94     -0.70     -4.21  ...     29746     11704   \n","4         0.59      3.09     -0.03     -1.08  ...     12476      7815   \n","...        ...       ...       ...       ...  ...       ...       ...   \n","1442 -99999.00 -99999.00 -99999.00 -99999.00  ...    -99999    -99999   \n","1443     -7.91      1.71      1.70     -4.47  ...     62372     10025   \n","1444     -7.42      1.88      5.80     -1.07  ...    121306      6533   \n","1445     -4.48      4.09      1.79     -4.80  ...    176874     67577   \n","1446     -3.91      5.45      2.92     -5.43  ...     61374     14814   \n","\n","      Temp-max       Date      Time     Kp  ap   SN  F10.7obs  F10.7adj  \n","0       303319 2019-05-04  00:00:00  2.667  12   12      72.3      73.5  \n","1       334905 2019-05-05  00:00:00  1.333   5   12      73.5      74.7  \n","2        75843 2019-05-06  00:00:00  1.667   6   16      76.0      77.3  \n","3        55111 2019-05-07  00:00:00  2.000   7   26      78.7      80.1  \n","4        16210 2019-05-08  00:00:00  1.000   4   25      75.3      76.8  \n","...        ...        ...       ...    ...  ..  ...       ...       ...  \n","1442    -99999 2023-10-02  00:00:00  3.333  18  173     157.4     157.7  \n","1443    209472 2023-10-03  00:00:00  2.333   9  148     153.7     153.8  \n","1444    464060 2023-10-04  00:00:00  3.667  22  159     155.0     155.1  \n","1445    242981 2023-10-05  00:00:00  5.000  48  169     156.1     156.1  \n","1446    209840 2023-10-06  00:00:00  3.000  15  152     155.3     155.3  \n","\n","[1447 rows x 36 columns]"],"text/html":["\n","  <div id=\"df-45353ef5-7cce-4bf5-9e76-684bc2aeeba5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Kp</th>\n","      <th>ap</th>\n","      <th>SN</th>\n","      <th>F10.7obs</th>\n","      <th>F10.7adj</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-05-04 00:00:00</td>\n","      <td>1</td>\n","      <td>4.35</td>\n","      <td>2.24</td>\n","      <td>11.02</td>\n","      <td>2.11</td>\n","      <td>-4.73</td>\n","      <td>10.15</td>\n","      <td>-1.58</td>\n","      <td>-7.00</td>\n","      <td>...</td>\n","      <td>179360</td>\n","      <td>55436</td>\n","      <td>303319</td>\n","      <td>2019-05-04</td>\n","      <td>00:00:00</td>\n","      <td>2.667</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>72.3</td>\n","      <td>73.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-05 00:00:00</td>\n","      <td>1</td>\n","      <td>3.46</td>\n","      <td>1.62</td>\n","      <td>4.20</td>\n","      <td>1.86</td>\n","      <td>-3.46</td>\n","      <td>3.93</td>\n","      <td>-1.51</td>\n","      <td>-3.62</td>\n","      <td>...</td>\n","      <td>122091</td>\n","      <td>25719</td>\n","      <td>334905</td>\n","      <td>2019-05-05</td>\n","      <td>00:00:00</td>\n","      <td>1.333</td>\n","      <td>5</td>\n","      <td>12</td>\n","      <td>73.5</td>\n","      <td>74.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-05-06 00:00:00</td>\n","      <td>1</td>\n","      <td>4.01</td>\n","      <td>2.73</td>\n","      <td>5.13</td>\n","      <td>1.86</td>\n","      <td>-2.55</td>\n","      <td>4.80</td>\n","      <td>-2.31</td>\n","      <td>-4.59</td>\n","      <td>...</td>\n","      <td>43075</td>\n","      <td>12791</td>\n","      <td>75843</td>\n","      <td>2019-05-06</td>\n","      <td>00:00:00</td>\n","      <td>1.667</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>76.0</td>\n","      <td>77.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-07 00:00:00</td>\n","      <td>1</td>\n","      <td>3.73</td>\n","      <td>1.28</td>\n","      <td>4.70</td>\n","      <td>2.13</td>\n","      <td>-1.02</td>\n","      <td>3.94</td>\n","      <td>-0.70</td>\n","      <td>-4.21</td>\n","      <td>...</td>\n","      <td>29746</td>\n","      <td>11704</td>\n","      <td>55111</td>\n","      <td>2019-05-07</td>\n","      <td>00:00:00</td>\n","      <td>2.000</td>\n","      <td>7</td>\n","      <td>26</td>\n","      <td>78.7</td>\n","      <td>80.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-05-08 00:00:00</td>\n","      <td>1</td>\n","      <td>2.62</td>\n","      <td>0.86</td>\n","      <td>3.37</td>\n","      <td>2.18</td>\n","      <td>0.59</td>\n","      <td>3.09</td>\n","      <td>-0.03</td>\n","      <td>-1.08</td>\n","      <td>...</td>\n","      <td>12476</td>\n","      <td>7815</td>\n","      <td>16210</td>\n","      <td>2019-05-08</td>\n","      <td>00:00:00</td>\n","      <td>1.000</td>\n","      <td>4</td>\n","      <td>25</td>\n","      <td>75.3</td>\n","      <td>76.8</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1442</th>\n","      <td>2023-10-02 00:00:00</td>\n","      <td>1</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>-99999.00</td>\n","      <td>...</td>\n","      <td>-99999</td>\n","      <td>-99999</td>\n","      <td>-99999</td>\n","      <td>2023-10-02</td>\n","      <td>00:00:00</td>\n","      <td>3.333</td>\n","      <td>18</td>\n","      <td>173</td>\n","      <td>157.4</td>\n","      <td>157.7</td>\n","    </tr>\n","    <tr>\n","      <th>1443</th>\n","      <td>2023-10-03 00:00:00</td>\n","      <td>1</td>\n","      <td>7.58</td>\n","      <td>5.56</td>\n","      <td>8.60</td>\n","      <td>-6.37</td>\n","      <td>-7.91</td>\n","      <td>1.71</td>\n","      <td>1.70</td>\n","      <td>-4.47</td>\n","      <td>...</td>\n","      <td>62372</td>\n","      <td>10025</td>\n","      <td>209472</td>\n","      <td>2023-10-03</td>\n","      <td>00:00:00</td>\n","      <td>2.333</td>\n","      <td>9</td>\n","      <td>148</td>\n","      <td>153.7</td>\n","      <td>153.8</td>\n","    </tr>\n","    <tr>\n","      <th>1444</th>\n","      <td>2023-10-04 00:00:00</td>\n","      <td>1</td>\n","      <td>7.82</td>\n","      <td>5.73</td>\n","      <td>9.41</td>\n","      <td>-3.49</td>\n","      <td>-7.42</td>\n","      <td>1.88</td>\n","      <td>5.80</td>\n","      <td>-1.07</td>\n","      <td>...</td>\n","      <td>121306</td>\n","      <td>6533</td>\n","      <td>464060</td>\n","      <td>2023-10-04</td>\n","      <td>00:00:00</td>\n","      <td>3.667</td>\n","      <td>22</td>\n","      <td>159</td>\n","      <td>155.0</td>\n","      <td>155.1</td>\n","    </tr>\n","    <tr>\n","      <th>1445</th>\n","      <td>2023-10-05 00:00:00</td>\n","      <td>1</td>\n","      <td>4.36</td>\n","      <td>2.17</td>\n","      <td>7.49</td>\n","      <td>0.30</td>\n","      <td>-4.48</td>\n","      <td>4.09</td>\n","      <td>1.79</td>\n","      <td>-4.80</td>\n","      <td>...</td>\n","      <td>176874</td>\n","      <td>67577</td>\n","      <td>242981</td>\n","      <td>2023-10-05</td>\n","      <td>00:00:00</td>\n","      <td>5.000</td>\n","      <td>48</td>\n","      <td>169</td>\n","      <td>156.1</td>\n","      <td>156.1</td>\n","    </tr>\n","    <tr>\n","      <th>1446</th>\n","      <td>2023-10-06 00:00:00</td>\n","      <td>1</td>\n","      <td>5.98</td>\n","      <td>1.76</td>\n","      <td>7.95</td>\n","      <td>0.61</td>\n","      <td>-3.91</td>\n","      <td>5.45</td>\n","      <td>2.92</td>\n","      <td>-5.43</td>\n","      <td>...</td>\n","      <td>61374</td>\n","      <td>14814</td>\n","      <td>209840</td>\n","      <td>2023-10-06</td>\n","      <td>00:00:00</td>\n","      <td>3.000</td>\n","      <td>15</td>\n","      <td>152</td>\n","      <td>155.3</td>\n","      <td>155.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1447 rows Ã— 36 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45353ef5-7cce-4bf5-9e76-684bc2aeeba5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-45353ef5-7cce-4bf5-9e76-684bc2aeeba5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-45353ef5-7cce-4bf5-9e76-684bc2aeeba5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a9b79ccb-1f5d-403e-afff-677863c33928\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9b79ccb-1f5d-403e-afff-677863c33928')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a9b79ccb-1f5d-403e-afff-677863c33928 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":314}]},{"cell_type":"code","source":["merged_data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xcGX0TPGoY4A","executionInfo":{"status":"ok","timestamp":1696707252196,"user_tz":-330,"elapsed":453,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"1ad015f4-5500-44dd-c1b2-3b23e383898d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Timestamp', 'Source', 'Bt-med', 'Bt-min', 'Bt-max', 'Bx-med', 'Bx-min',\n","       'Bx-max', 'By-med', 'By-min', 'By-max', 'Bz-med', 'Bz-min', 'Bz-max',\n","       'Phi-mean', 'Phi-min', 'Phi-max', 'Theta-med', 'Theta-min', 'Theta-max',\n","       'Dens-med', 'Dens-min', 'Dens-max', 'Speed-med', 'Speed-min',\n","       'Speed-max', 'Temp-med', 'Temp-min', 'Temp-max', 'Date', 'Time', 'Kp',\n","       'ap', 'SN', 'F10.7obs', 'F10.7adj'],\n","      dtype='object')"]},"metadata":{},"execution_count":316}]},{"cell_type":"code","source":["merged_data.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZWapX3eohib","executionInfo":{"status":"ok","timestamp":1696707267117,"user_tz":-330,"elapsed":641,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"1cb551e7-231f-4b87-dd7d-8255c1905a8d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp    0\n","Source       0\n","Bt-med       0\n","Bt-min       0\n","Bt-max       0\n","Bx-med       0\n","Bx-min       0\n","Bx-max       0\n","By-med       0\n","By-min       0\n","By-max       0\n","Bz-med       0\n","Bz-min       0\n","Bz-max       0\n","Phi-mean     0\n","Phi-min      0\n","Phi-max      0\n","Theta-med    0\n","Theta-min    0\n","Theta-max    0\n","Dens-med     0\n","Dens-min     0\n","Dens-max     0\n","Speed-med    0\n","Speed-min    0\n","Speed-max    0\n","Temp-med     0\n","Temp-min     0\n","Temp-max     0\n","Date         0\n","Time         0\n","Kp           0\n","ap           0\n","SN           0\n","F10.7obs     0\n","F10.7adj     0\n","dtype: int64"]},"metadata":{},"execution_count":317}]},{"cell_type":"code","source":["# Organize columns\n","organized_columns = [\n","    'Timestamp', 'Date', 'Time', 'Kp',\n","    'ap', 'SN', 'F10.7obs', 'F10.7adj',\n","    'Source', 'Bt-med', 'Bt-min', 'Bt-max', 'Bx-med', 'Bx-min', 'Bx-max',\n","    'By-med', 'By-min', 'By-max', 'Bz-med', 'Bz-min', 'Bz-max',\n","    'Phi-mean', 'Phi-min', 'Phi-max',\n","    'Theta-med', 'Theta-min', 'Theta-max',\n","    'Dens-med', 'Dens-min', 'Dens-max',\n","    'Speed-med', 'Speed-min', 'Speed-max',\n","    'Temp-med', 'Temp-min', 'Temp-max'\n","]\n","\n","# Reorder dataframe based on the organized columns\n","merged_data = merged_data[organized_columns]\n","\n","# Save to CSV\n","merged_data.to_csv('/content/drive/MyDrive/NASA Hackathon/Datasets/Final Datasets/5_year_dataset.csv', index=False)"],"metadata":{"id":"KmblexozpD8N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 1 year Dataset"],"metadata":{"id":"ao42E1JTp1K2"}},{"cell_type":"code","source":["timestamp_dtype = data2[\"Timestamp\"].dtype\n","print(timestamp_dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b1-YXB6lpqGg","executionInfo":{"status":"ok","timestamp":1696733219452,"user_tz":-330,"elapsed":8,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"117a8b00-a487-44e8-eb63-800403243567"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["object\n"]}]},{"cell_type":"code","source":["data2[\"Timestamp\"] = data2[\"Timestamp\"].astype(str)"],"metadata":{"id":"0Hk3HU77qJOt","executionInfo":{"status":"ok","timestamp":1696733219452,"user_tz":-330,"elapsed":7,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["data2[\"Date\"] = data2[\"Timestamp\"].str.split(\" \").str[0]\n","data2[\"Time\"] = data2[\"Timestamp\"].str.split(\" \").str[1]"],"metadata":{"id":"iF8TmlwUqMKr","executionInfo":{"status":"ok","timestamp":1696733219452,"user_tz":-330,"elapsed":7,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["data2.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QyVyBHsLqVan","executionInfo":{"status":"ok","timestamp":1696733219452,"user_tz":-330,"elapsed":7,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"247ca5cd-bdb6-4986-94db-f0fffac2d39c"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Timestamp', 'Source', 'Bt-med', 'Bt-min', 'Bt-max', 'Bx-med', 'Bx-min',\n","       'Bx-max', 'By-med', 'By-min', 'By-max', 'Bz-med', 'Bz-min', 'Bz-max',\n","       'Phi-mean', 'Phi-min', 'Phi-max', 'Theta-med', 'Theta-min', 'Theta-max',\n","       'Dens-med', 'Dens-min', 'Dens-max', 'Speed-med', 'Speed-min',\n","       'Speed-max', 'Temp-med', 'Temp-min', 'Temp-max', 'Date', 'Time'],\n","      dtype='object')"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["data2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"GWfWcEtgLbge","executionInfo":{"status":"ok","timestamp":1696733223467,"user_tz":-330,"elapsed":6,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"4e79aed2-f78c-4f3d-f9c5-09be931c7180"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0     2022-10-31 12:00:00       1    4.96    3.41    5.55    1.45   -2.51   \n","1     2022-10-31 18:00:00       1    4.89    3.58    6.40   -0.49   -3.86   \n","2     2022-11-01 00:00:00       1    4.66    3.25    5.14   -3.18   -4.66   \n","3     2022-11-01 06:00:00       1    4.03    2.52    5.09   -0.49   -3.71   \n","4     2022-11-01 12:00:00       1    4.50    3.40    4.78   -3.32   -4.49   \n","...                   ...     ...     ...     ...     ...     ...     ...   \n","1359  2023-10-06 06:00:00       1    5.91    2.26    7.24    3.84   -3.54   \n","1360  2023-10-06 12:00:00       1    5.26    3.57    7.27    0.44   -2.72   \n","1361  2023-10-06 18:00:00       1    6.72    1.52    7.13   -0.94   -2.85   \n","1362  2023-10-07 00:00:00       1    5.60    4.75    6.00   -1.46   -2.84   \n","1363  2023-10-07 06:00:00       1    5.37    3.78    5.73   -1.08   -2.01   \n","\n","      Bx-max  By-med  By-min  ...  Dens-min  Dens-max  Speed-med  Speed-min  \\\n","0       3.03    2.80   -4.01  ...      6.08     10.79      479.4      457.2   \n","1       4.89    3.92    0.39  ...      6.29     11.21      471.7      450.3   \n","2       4.58    0.81   -1.46  ...      5.43     11.14      462.3      442.9   \n","3       3.32    1.84   -1.97  ...      4.47     10.04      462.1      427.5   \n","4       2.84    2.00   -1.37  ...      3.72      5.16      430.3      412.7   \n","...      ...     ...     ...  ...       ...       ...        ...        ...   \n","1359    5.29   -0.61   -3.98  ...      9.17     16.74      428.5      411.5   \n","1360    3.05    3.74   -5.47  ...      3.33     12.16      412.3      388.8   \n","1361    1.39    6.12   -1.57  ...      2.84     15.07      397.0      374.1   \n","1362   -0.70    4.62    2.32  ...      1.54      7.08      369.2      364.2   \n","1363    0.57    2.10   -0.48  ...      1.07      7.37      413.8      352.2   \n","\n","      Speed-max  Temp-med  Temp-min  Temp-max        Date      Time  \n","0         497.0    255620    119723    306989  2022-10-31  12:00:00  \n","1         502.4    246035    123225    291427  2022-10-31  18:00:00  \n","2         488.5    202911     98993    329715  2022-11-01  00:00:00  \n","3         483.6    222950     94413    307277  2022-11-01  06:00:00  \n","4         437.3     96466     65622    126397  2022-11-01  12:00:00  \n","...         ...       ...       ...       ...         ...       ...  \n","1359      443.2     65997     40556    128180  2023-10-06  06:00:00  \n","1360      424.9     54364     38827    129785  2023-10-06  12:00:00  \n","1361      415.0     45018      8092    108844  2023-10-06  18:00:00  \n","1362      375.4     11504      5000     22914  2023-10-07  00:00:00  \n","1363      477.2    185269     13068    339745  2023-10-07  06:00:00  \n","\n","[1364 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-1a04501d-356c-4cff-8e2a-98af6253a298\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-10-31 12:00:00</td>\n","      <td>1</td>\n","      <td>4.96</td>\n","      <td>3.41</td>\n","      <td>5.55</td>\n","      <td>1.45</td>\n","      <td>-2.51</td>\n","      <td>3.03</td>\n","      <td>2.80</td>\n","      <td>-4.01</td>\n","      <td>...</td>\n","      <td>6.08</td>\n","      <td>10.79</td>\n","      <td>479.4</td>\n","      <td>457.2</td>\n","      <td>497.0</td>\n","      <td>255620</td>\n","      <td>119723</td>\n","      <td>306989</td>\n","      <td>2022-10-31</td>\n","      <td>12:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-10-31 18:00:00</td>\n","      <td>1</td>\n","      <td>4.89</td>\n","      <td>3.58</td>\n","      <td>6.40</td>\n","      <td>-0.49</td>\n","      <td>-3.86</td>\n","      <td>4.89</td>\n","      <td>3.92</td>\n","      <td>0.39</td>\n","      <td>...</td>\n","      <td>6.29</td>\n","      <td>11.21</td>\n","      <td>471.7</td>\n","      <td>450.3</td>\n","      <td>502.4</td>\n","      <td>246035</td>\n","      <td>123225</td>\n","      <td>291427</td>\n","      <td>2022-10-31</td>\n","      <td>18:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-11-01 00:00:00</td>\n","      <td>1</td>\n","      <td>4.66</td>\n","      <td>3.25</td>\n","      <td>5.14</td>\n","      <td>-3.18</td>\n","      <td>-4.66</td>\n","      <td>4.58</td>\n","      <td>0.81</td>\n","      <td>-1.46</td>\n","      <td>...</td>\n","      <td>5.43</td>\n","      <td>11.14</td>\n","      <td>462.3</td>\n","      <td>442.9</td>\n","      <td>488.5</td>\n","      <td>202911</td>\n","      <td>98993</td>\n","      <td>329715</td>\n","      <td>2022-11-01</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-11-01 06:00:00</td>\n","      <td>1</td>\n","      <td>4.03</td>\n","      <td>2.52</td>\n","      <td>5.09</td>\n","      <td>-0.49</td>\n","      <td>-3.71</td>\n","      <td>3.32</td>\n","      <td>1.84</td>\n","      <td>-1.97</td>\n","      <td>...</td>\n","      <td>4.47</td>\n","      <td>10.04</td>\n","      <td>462.1</td>\n","      <td>427.5</td>\n","      <td>483.6</td>\n","      <td>222950</td>\n","      <td>94413</td>\n","      <td>307277</td>\n","      <td>2022-11-01</td>\n","      <td>06:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-11-01 12:00:00</td>\n","      <td>1</td>\n","      <td>4.50</td>\n","      <td>3.40</td>\n","      <td>4.78</td>\n","      <td>-3.32</td>\n","      <td>-4.49</td>\n","      <td>2.84</td>\n","      <td>2.00</td>\n","      <td>-1.37</td>\n","      <td>...</td>\n","      <td>3.72</td>\n","      <td>5.16</td>\n","      <td>430.3</td>\n","      <td>412.7</td>\n","      <td>437.3</td>\n","      <td>96466</td>\n","      <td>65622</td>\n","      <td>126397</td>\n","      <td>2022-11-01</td>\n","      <td>12:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1359</th>\n","      <td>2023-10-06 06:00:00</td>\n","      <td>1</td>\n","      <td>5.91</td>\n","      <td>2.26</td>\n","      <td>7.24</td>\n","      <td>3.84</td>\n","      <td>-3.54</td>\n","      <td>5.29</td>\n","      <td>-0.61</td>\n","      <td>-3.98</td>\n","      <td>...</td>\n","      <td>9.17</td>\n","      <td>16.74</td>\n","      <td>428.5</td>\n","      <td>411.5</td>\n","      <td>443.2</td>\n","      <td>65997</td>\n","      <td>40556</td>\n","      <td>128180</td>\n","      <td>2023-10-06</td>\n","      <td>06:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1360</th>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>1</td>\n","      <td>5.26</td>\n","      <td>3.57</td>\n","      <td>7.27</td>\n","      <td>0.44</td>\n","      <td>-2.72</td>\n","      <td>3.05</td>\n","      <td>3.74</td>\n","      <td>-5.47</td>\n","      <td>...</td>\n","      <td>3.33</td>\n","      <td>12.16</td>\n","      <td>412.3</td>\n","      <td>388.8</td>\n","      <td>424.9</td>\n","      <td>54364</td>\n","      <td>38827</td>\n","      <td>129785</td>\n","      <td>2023-10-06</td>\n","      <td>12:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1361</th>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>1</td>\n","      <td>6.72</td>\n","      <td>1.52</td>\n","      <td>7.13</td>\n","      <td>-0.94</td>\n","      <td>-2.85</td>\n","      <td>1.39</td>\n","      <td>6.12</td>\n","      <td>-1.57</td>\n","      <td>...</td>\n","      <td>2.84</td>\n","      <td>15.07</td>\n","      <td>397.0</td>\n","      <td>374.1</td>\n","      <td>415.0</td>\n","      <td>45018</td>\n","      <td>8092</td>\n","      <td>108844</td>\n","      <td>2023-10-06</td>\n","      <td>18:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1362</th>\n","      <td>2023-10-07 00:00:00</td>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>4.75</td>\n","      <td>6.00</td>\n","      <td>-1.46</td>\n","      <td>-2.84</td>\n","      <td>-0.70</td>\n","      <td>4.62</td>\n","      <td>2.32</td>\n","      <td>...</td>\n","      <td>1.54</td>\n","      <td>7.08</td>\n","      <td>369.2</td>\n","      <td>364.2</td>\n","      <td>375.4</td>\n","      <td>11504</td>\n","      <td>5000</td>\n","      <td>22914</td>\n","      <td>2023-10-07</td>\n","      <td>00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1363</th>\n","      <td>2023-10-07 06:00:00</td>\n","      <td>1</td>\n","      <td>5.37</td>\n","      <td>3.78</td>\n","      <td>5.73</td>\n","      <td>-1.08</td>\n","      <td>-2.01</td>\n","      <td>0.57</td>\n","      <td>2.10</td>\n","      <td>-0.48</td>\n","      <td>...</td>\n","      <td>1.07</td>\n","      <td>7.37</td>\n","      <td>413.8</td>\n","      <td>352.2</td>\n","      <td>477.2</td>\n","      <td>185269</td>\n","      <td>13068</td>\n","      <td>339745</td>\n","      <td>2023-10-07</td>\n","      <td>06:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1364 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a04501d-356c-4cff-8e2a-98af6253a298')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a04501d-356c-4cff-8e2a-98af6253a298 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a04501d-356c-4cff-8e2a-98af6253a298');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3e56abf6-4826-4d37-9095-e8e639856209\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e56abf6-4826-4d37-9095-e8e639856209')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3e56abf6-4826-4d37-9095-e8e639856209 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["data2['Timestamp'] = pd.to_datetime(data2['Timestamp'])\n","\n","def get_max_kp_for_timestamp(timestamp, data5_df):\n","    # Define the 6-hour window\n","    start_time = timestamp\n","    end_time = timestamp + pd.Timedelta(hours=6)\n","\n","    # Filter data5 for records within this window\n","    mask = (data5_df['Start'] >= start_time) & (data5_df['End'] <= end_time)\n","    relevant_data5 = data5_df[mask]\n","\n","    # Return the maximum Kp value, or NaN if there are no records in the window\n","    return relevant_data5['Kp'].max()\n","\n","# Apply the helper function to each Timestamp in data2 to get the max Kp value\n","data2['Max_Kp'] = data2['Timestamp'].apply(lambda x: get_max_kp_for_timestamp(x, data5))\n"],"metadata":{"id":"xCH75kWmNBSj","executionInfo":{"status":"ok","timestamp":1696733884075,"user_tz":-330,"elapsed":4899,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["data2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"QRBlio2UOGtS","executionInfo":{"status":"ok","timestamp":1696733890680,"user_tz":-330,"elapsed":521,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"f048e7ce-a98b-4dbe-bd85-dcd37600c2bf"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0    2022-10-31 12:00:00       1    4.96    3.41    5.55    1.45   -2.51   \n","1    2022-10-31 18:00:00       1    4.89    3.58    6.40   -0.49   -3.86   \n","2    2022-11-01 00:00:00       1    4.66    3.25    5.14   -3.18   -4.66   \n","3    2022-11-01 06:00:00       1    4.03    2.52    5.09   -0.49   -3.71   \n","4    2022-11-01 12:00:00       1    4.50    3.40    4.78   -3.32   -4.49   \n","...                  ...     ...     ...     ...     ...     ...     ...   \n","1359 2023-10-06 06:00:00       1    5.91    2.26    7.24    3.84   -3.54   \n","1360 2023-10-06 12:00:00       1    5.26    3.57    7.27    0.44   -2.72   \n","1361 2023-10-06 18:00:00       1    6.72    1.52    7.13   -0.94   -2.85   \n","1362 2023-10-07 00:00:00       1    5.60    4.75    6.00   -1.46   -2.84   \n","1363 2023-10-07 06:00:00       1    5.37    3.78    5.73   -1.08   -2.01   \n","\n","      Bx-max  By-med  By-min  ...  Dens-med  Dens-min  Dens-max  Speed-med  \\\n","0       3.03    2.80   -4.01  ...      9.77      6.08     10.79      479.4   \n","1       4.89    3.92    0.39  ...     10.04      6.29     11.21      471.7   \n","2       4.58    0.81   -1.46  ...      8.18      5.43     11.14      462.3   \n","3       3.32    1.84   -1.97  ...      7.97      4.47     10.04      462.1   \n","4       2.84    2.00   -1.37  ...      4.61      3.72      5.16      430.3   \n","...      ...     ...     ...  ...       ...       ...       ...        ...   \n","1359    5.29   -0.61   -3.98  ...     13.67      9.17     16.74      428.5   \n","1360    3.05    3.74   -5.47  ...      7.27      3.33     12.16      412.3   \n","1361    1.39    6.12   -1.57  ...      4.65      2.84     15.07      397.0   \n","1362   -0.70    4.62    2.32  ...      4.77      1.54      7.08      369.2   \n","1363    0.57    2.10   -0.48  ...      3.86      1.07      7.37      413.8   \n","\n","      Speed-min  Speed-max  Temp-med  Temp-min  Temp-max  Max_Kp  \n","0         457.2      497.0    255620    119723    306989   3.333  \n","1         450.3      502.4    246035    123225    291427   2.000  \n","2         442.9      488.5    202911     98993    329715   1.000  \n","3         427.5      483.6    222950     94413    307277   3.333  \n","4         412.7      437.3     96466     65622    126397   2.000  \n","...         ...        ...       ...       ...       ...     ...  \n","1359      411.5      443.2     65997     40556    128180   2.000  \n","1360      388.8      424.9     54364     38827    129785   1.333  \n","1361      374.1      415.0     45018      8092    108844   3.000  \n","1362      364.2      375.4     11504      5000     22914     NaN  \n","1363      352.2      477.2    185269     13068    339745     NaN  \n","\n","[1364 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-1db377e9-bb0f-462a-9dd4-88b3d289281a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Dens-med</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Max_Kp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-10-31 12:00:00</td>\n","      <td>1</td>\n","      <td>4.96</td>\n","      <td>3.41</td>\n","      <td>5.55</td>\n","      <td>1.45</td>\n","      <td>-2.51</td>\n","      <td>3.03</td>\n","      <td>2.80</td>\n","      <td>-4.01</td>\n","      <td>...</td>\n","      <td>9.77</td>\n","      <td>6.08</td>\n","      <td>10.79</td>\n","      <td>479.4</td>\n","      <td>457.2</td>\n","      <td>497.0</td>\n","      <td>255620</td>\n","      <td>119723</td>\n","      <td>306989</td>\n","      <td>3.333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-10-31 18:00:00</td>\n","      <td>1</td>\n","      <td>4.89</td>\n","      <td>3.58</td>\n","      <td>6.40</td>\n","      <td>-0.49</td>\n","      <td>-3.86</td>\n","      <td>4.89</td>\n","      <td>3.92</td>\n","      <td>0.39</td>\n","      <td>...</td>\n","      <td>10.04</td>\n","      <td>6.29</td>\n","      <td>11.21</td>\n","      <td>471.7</td>\n","      <td>450.3</td>\n","      <td>502.4</td>\n","      <td>246035</td>\n","      <td>123225</td>\n","      <td>291427</td>\n","      <td>2.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-11-01 00:00:00</td>\n","      <td>1</td>\n","      <td>4.66</td>\n","      <td>3.25</td>\n","      <td>5.14</td>\n","      <td>-3.18</td>\n","      <td>-4.66</td>\n","      <td>4.58</td>\n","      <td>0.81</td>\n","      <td>-1.46</td>\n","      <td>...</td>\n","      <td>8.18</td>\n","      <td>5.43</td>\n","      <td>11.14</td>\n","      <td>462.3</td>\n","      <td>442.9</td>\n","      <td>488.5</td>\n","      <td>202911</td>\n","      <td>98993</td>\n","      <td>329715</td>\n","      <td>1.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-11-01 06:00:00</td>\n","      <td>1</td>\n","      <td>4.03</td>\n","      <td>2.52</td>\n","      <td>5.09</td>\n","      <td>-0.49</td>\n","      <td>-3.71</td>\n","      <td>3.32</td>\n","      <td>1.84</td>\n","      <td>-1.97</td>\n","      <td>...</td>\n","      <td>7.97</td>\n","      <td>4.47</td>\n","      <td>10.04</td>\n","      <td>462.1</td>\n","      <td>427.5</td>\n","      <td>483.6</td>\n","      <td>222950</td>\n","      <td>94413</td>\n","      <td>307277</td>\n","      <td>3.333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-11-01 12:00:00</td>\n","      <td>1</td>\n","      <td>4.50</td>\n","      <td>3.40</td>\n","      <td>4.78</td>\n","      <td>-3.32</td>\n","      <td>-4.49</td>\n","      <td>2.84</td>\n","      <td>2.00</td>\n","      <td>-1.37</td>\n","      <td>...</td>\n","      <td>4.61</td>\n","      <td>3.72</td>\n","      <td>5.16</td>\n","      <td>430.3</td>\n","      <td>412.7</td>\n","      <td>437.3</td>\n","      <td>96466</td>\n","      <td>65622</td>\n","      <td>126397</td>\n","      <td>2.000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1359</th>\n","      <td>2023-10-06 06:00:00</td>\n","      <td>1</td>\n","      <td>5.91</td>\n","      <td>2.26</td>\n","      <td>7.24</td>\n","      <td>3.84</td>\n","      <td>-3.54</td>\n","      <td>5.29</td>\n","      <td>-0.61</td>\n","      <td>-3.98</td>\n","      <td>...</td>\n","      <td>13.67</td>\n","      <td>9.17</td>\n","      <td>16.74</td>\n","      <td>428.5</td>\n","      <td>411.5</td>\n","      <td>443.2</td>\n","      <td>65997</td>\n","      <td>40556</td>\n","      <td>128180</td>\n","      <td>2.000</td>\n","    </tr>\n","    <tr>\n","      <th>1360</th>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>1</td>\n","      <td>5.26</td>\n","      <td>3.57</td>\n","      <td>7.27</td>\n","      <td>0.44</td>\n","      <td>-2.72</td>\n","      <td>3.05</td>\n","      <td>3.74</td>\n","      <td>-5.47</td>\n","      <td>...</td>\n","      <td>7.27</td>\n","      <td>3.33</td>\n","      <td>12.16</td>\n","      <td>412.3</td>\n","      <td>388.8</td>\n","      <td>424.9</td>\n","      <td>54364</td>\n","      <td>38827</td>\n","      <td>129785</td>\n","      <td>1.333</td>\n","    </tr>\n","    <tr>\n","      <th>1361</th>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>1</td>\n","      <td>6.72</td>\n","      <td>1.52</td>\n","      <td>7.13</td>\n","      <td>-0.94</td>\n","      <td>-2.85</td>\n","      <td>1.39</td>\n","      <td>6.12</td>\n","      <td>-1.57</td>\n","      <td>...</td>\n","      <td>4.65</td>\n","      <td>2.84</td>\n","      <td>15.07</td>\n","      <td>397.0</td>\n","      <td>374.1</td>\n","      <td>415.0</td>\n","      <td>45018</td>\n","      <td>8092</td>\n","      <td>108844</td>\n","      <td>3.000</td>\n","    </tr>\n","    <tr>\n","      <th>1362</th>\n","      <td>2023-10-07 00:00:00</td>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>4.75</td>\n","      <td>6.00</td>\n","      <td>-1.46</td>\n","      <td>-2.84</td>\n","      <td>-0.70</td>\n","      <td>4.62</td>\n","      <td>2.32</td>\n","      <td>...</td>\n","      <td>4.77</td>\n","      <td>1.54</td>\n","      <td>7.08</td>\n","      <td>369.2</td>\n","      <td>364.2</td>\n","      <td>375.4</td>\n","      <td>11504</td>\n","      <td>5000</td>\n","      <td>22914</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1363</th>\n","      <td>2023-10-07 06:00:00</td>\n","      <td>1</td>\n","      <td>5.37</td>\n","      <td>3.78</td>\n","      <td>5.73</td>\n","      <td>-1.08</td>\n","      <td>-2.01</td>\n","      <td>0.57</td>\n","      <td>2.10</td>\n","      <td>-0.48</td>\n","      <td>...</td>\n","      <td>3.86</td>\n","      <td>1.07</td>\n","      <td>7.37</td>\n","      <td>413.8</td>\n","      <td>352.2</td>\n","      <td>477.2</td>\n","      <td>185269</td>\n","      <td>13068</td>\n","      <td>339745</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1364 rows Ã— 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1db377e9-bb0f-462a-9dd4-88b3d289281a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1db377e9-bb0f-462a-9dd4-88b3d289281a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1db377e9-bb0f-462a-9dd4-88b3d289281a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd8c7c35-2bfa-4851-83cb-f23d27f7d15c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd8c7c35-2bfa-4851-83cb-f23d27f7d15c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd8c7c35-2bfa-4851-83cb-f23d27f7d15c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Ensure there's a 'Date' column in data2\n","data2['Date'] = data2['Timestamp'].dt.date"],"metadata":{"id":"AYR9azcvOhCq","executionInfo":{"status":"ok","timestamp":1696733994208,"user_tz":-330,"elapsed":4,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["# Ensure there's a 'Date' column in data2\n","data2['Date'] = data2['Timestamp'].dt.date\n","\n","\n","# Convert the 'YYY', 'MM', and 'DD' columns in data4 to a 'Date' column\n","data4['Date'] = pd.to_datetime(data4['YYY'].astype(str) + '-' +\n","                               data4['MM'].astype(str) + '-' +\n","                               data4['DD'].astype(str))\n","\n","data2['Date'] = pd.to_datetime(data2['Date'])\n","data4['Date'] = pd.to_datetime(data4['Date'])\n","\n","# Now merge the desired columns from data4 into data2 based on the 'Date'\n","merged_data2 = pd.merge(data2, data4[['Date', 'SN', 'F10.7obs', 'F10.7adj']], on='Date', how='left')\n"],"metadata":{"id":"c_jyiuNLOmnL","executionInfo":{"status":"ok","timestamp":1696734140963,"user_tz":-330,"elapsed":504,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["data2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"3TMHGK4rPGRL","executionInfo":{"status":"ok","timestamp":1696734151075,"user_tz":-330,"elapsed":7,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"4c54010a-ee10-46c0-bc7f-5c8db0bf543d"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0    2022-10-31 12:00:00       1    4.96    3.41    5.55    1.45   -2.51   \n","1    2022-10-31 18:00:00       1    4.89    3.58    6.40   -0.49   -3.86   \n","2    2022-11-01 00:00:00       1    4.66    3.25    5.14   -3.18   -4.66   \n","3    2022-11-01 06:00:00       1    4.03    2.52    5.09   -0.49   -3.71   \n","4    2022-11-01 12:00:00       1    4.50    3.40    4.78   -3.32   -4.49   \n","...                  ...     ...     ...     ...     ...     ...     ...   \n","1359 2023-10-06 06:00:00       1    5.91    2.26    7.24    3.84   -3.54   \n","1360 2023-10-06 12:00:00       1    5.26    3.57    7.27    0.44   -2.72   \n","1361 2023-10-06 18:00:00       1    6.72    1.52    7.13   -0.94   -2.85   \n","1362 2023-10-07 00:00:00       1    5.60    4.75    6.00   -1.46   -2.84   \n","1363 2023-10-07 06:00:00       1    5.37    3.78    5.73   -1.08   -2.01   \n","\n","      Bx-max  By-med  By-min  ...  Dens-min  Dens-max  Speed-med  Speed-min  \\\n","0       3.03    2.80   -4.01  ...      6.08     10.79      479.4      457.2   \n","1       4.89    3.92    0.39  ...      6.29     11.21      471.7      450.3   \n","2       4.58    0.81   -1.46  ...      5.43     11.14      462.3      442.9   \n","3       3.32    1.84   -1.97  ...      4.47     10.04      462.1      427.5   \n","4       2.84    2.00   -1.37  ...      3.72      5.16      430.3      412.7   \n","...      ...     ...     ...  ...       ...       ...        ...        ...   \n","1359    5.29   -0.61   -3.98  ...      9.17     16.74      428.5      411.5   \n","1360    3.05    3.74   -5.47  ...      3.33     12.16      412.3      388.8   \n","1361    1.39    6.12   -1.57  ...      2.84     15.07      397.0      374.1   \n","1362   -0.70    4.62    2.32  ...      1.54      7.08      369.2      364.2   \n","1363    0.57    2.10   -0.48  ...      1.07      7.37      413.8      352.2   \n","\n","      Speed-max  Temp-med  Temp-min  Temp-max  Max_Kp       Date  \n","0         497.0    255620    119723    306989   3.333 2022-10-31  \n","1         502.4    246035    123225    291427   2.000 2022-10-31  \n","2         488.5    202911     98993    329715   1.000 2022-11-01  \n","3         483.6    222950     94413    307277   3.333 2022-11-01  \n","4         437.3     96466     65622    126397   2.000 2022-11-01  \n","...         ...       ...       ...       ...     ...        ...  \n","1359      443.2     65997     40556    128180   2.000 2023-10-06  \n","1360      424.9     54364     38827    129785   1.333 2023-10-06  \n","1361      415.0     45018      8092    108844   3.000 2023-10-06  \n","1362      375.4     11504      5000     22914     NaN 2023-10-07  \n","1363      477.2    185269     13068    339745     NaN 2023-10-07  \n","\n","[1364 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-57a8b371-fd1f-4ebf-98d7-00a28d1f95d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Max_Kp</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-10-31 12:00:00</td>\n","      <td>1</td>\n","      <td>4.96</td>\n","      <td>3.41</td>\n","      <td>5.55</td>\n","      <td>1.45</td>\n","      <td>-2.51</td>\n","      <td>3.03</td>\n","      <td>2.80</td>\n","      <td>-4.01</td>\n","      <td>...</td>\n","      <td>6.08</td>\n","      <td>10.79</td>\n","      <td>479.4</td>\n","      <td>457.2</td>\n","      <td>497.0</td>\n","      <td>255620</td>\n","      <td>119723</td>\n","      <td>306989</td>\n","      <td>3.333</td>\n","      <td>2022-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-10-31 18:00:00</td>\n","      <td>1</td>\n","      <td>4.89</td>\n","      <td>3.58</td>\n","      <td>6.40</td>\n","      <td>-0.49</td>\n","      <td>-3.86</td>\n","      <td>4.89</td>\n","      <td>3.92</td>\n","      <td>0.39</td>\n","      <td>...</td>\n","      <td>6.29</td>\n","      <td>11.21</td>\n","      <td>471.7</td>\n","      <td>450.3</td>\n","      <td>502.4</td>\n","      <td>246035</td>\n","      <td>123225</td>\n","      <td>291427</td>\n","      <td>2.000</td>\n","      <td>2022-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-11-01 00:00:00</td>\n","      <td>1</td>\n","      <td>4.66</td>\n","      <td>3.25</td>\n","      <td>5.14</td>\n","      <td>-3.18</td>\n","      <td>-4.66</td>\n","      <td>4.58</td>\n","      <td>0.81</td>\n","      <td>-1.46</td>\n","      <td>...</td>\n","      <td>5.43</td>\n","      <td>11.14</td>\n","      <td>462.3</td>\n","      <td>442.9</td>\n","      <td>488.5</td>\n","      <td>202911</td>\n","      <td>98993</td>\n","      <td>329715</td>\n","      <td>1.000</td>\n","      <td>2022-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-11-01 06:00:00</td>\n","      <td>1</td>\n","      <td>4.03</td>\n","      <td>2.52</td>\n","      <td>5.09</td>\n","      <td>-0.49</td>\n","      <td>-3.71</td>\n","      <td>3.32</td>\n","      <td>1.84</td>\n","      <td>-1.97</td>\n","      <td>...</td>\n","      <td>4.47</td>\n","      <td>10.04</td>\n","      <td>462.1</td>\n","      <td>427.5</td>\n","      <td>483.6</td>\n","      <td>222950</td>\n","      <td>94413</td>\n","      <td>307277</td>\n","      <td>3.333</td>\n","      <td>2022-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-11-01 12:00:00</td>\n","      <td>1</td>\n","      <td>4.50</td>\n","      <td>3.40</td>\n","      <td>4.78</td>\n","      <td>-3.32</td>\n","      <td>-4.49</td>\n","      <td>2.84</td>\n","      <td>2.00</td>\n","      <td>-1.37</td>\n","      <td>...</td>\n","      <td>3.72</td>\n","      <td>5.16</td>\n","      <td>430.3</td>\n","      <td>412.7</td>\n","      <td>437.3</td>\n","      <td>96466</td>\n","      <td>65622</td>\n","      <td>126397</td>\n","      <td>2.000</td>\n","      <td>2022-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1359</th>\n","      <td>2023-10-06 06:00:00</td>\n","      <td>1</td>\n","      <td>5.91</td>\n","      <td>2.26</td>\n","      <td>7.24</td>\n","      <td>3.84</td>\n","      <td>-3.54</td>\n","      <td>5.29</td>\n","      <td>-0.61</td>\n","      <td>-3.98</td>\n","      <td>...</td>\n","      <td>9.17</td>\n","      <td>16.74</td>\n","      <td>428.5</td>\n","      <td>411.5</td>\n","      <td>443.2</td>\n","      <td>65997</td>\n","      <td>40556</td>\n","      <td>128180</td>\n","      <td>2.000</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>1360</th>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>1</td>\n","      <td>5.26</td>\n","      <td>3.57</td>\n","      <td>7.27</td>\n","      <td>0.44</td>\n","      <td>-2.72</td>\n","      <td>3.05</td>\n","      <td>3.74</td>\n","      <td>-5.47</td>\n","      <td>...</td>\n","      <td>3.33</td>\n","      <td>12.16</td>\n","      <td>412.3</td>\n","      <td>388.8</td>\n","      <td>424.9</td>\n","      <td>54364</td>\n","      <td>38827</td>\n","      <td>129785</td>\n","      <td>1.333</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>1361</th>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>1</td>\n","      <td>6.72</td>\n","      <td>1.52</td>\n","      <td>7.13</td>\n","      <td>-0.94</td>\n","      <td>-2.85</td>\n","      <td>1.39</td>\n","      <td>6.12</td>\n","      <td>-1.57</td>\n","      <td>...</td>\n","      <td>2.84</td>\n","      <td>15.07</td>\n","      <td>397.0</td>\n","      <td>374.1</td>\n","      <td>415.0</td>\n","      <td>45018</td>\n","      <td>8092</td>\n","      <td>108844</td>\n","      <td>3.000</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>1362</th>\n","      <td>2023-10-07 00:00:00</td>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>4.75</td>\n","      <td>6.00</td>\n","      <td>-1.46</td>\n","      <td>-2.84</td>\n","      <td>-0.70</td>\n","      <td>4.62</td>\n","      <td>2.32</td>\n","      <td>...</td>\n","      <td>1.54</td>\n","      <td>7.08</td>\n","      <td>369.2</td>\n","      <td>364.2</td>\n","      <td>375.4</td>\n","      <td>11504</td>\n","      <td>5000</td>\n","      <td>22914</td>\n","      <td>NaN</td>\n","      <td>2023-10-07</td>\n","    </tr>\n","    <tr>\n","      <th>1363</th>\n","      <td>2023-10-07 06:00:00</td>\n","      <td>1</td>\n","      <td>5.37</td>\n","      <td>3.78</td>\n","      <td>5.73</td>\n","      <td>-1.08</td>\n","      <td>-2.01</td>\n","      <td>0.57</td>\n","      <td>2.10</td>\n","      <td>-0.48</td>\n","      <td>...</td>\n","      <td>1.07</td>\n","      <td>7.37</td>\n","      <td>413.8</td>\n","      <td>352.2</td>\n","      <td>477.2</td>\n","      <td>185269</td>\n","      <td>13068</td>\n","      <td>339745</td>\n","      <td>NaN</td>\n","      <td>2023-10-07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1364 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57a8b371-fd1f-4ebf-98d7-00a28d1f95d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-57a8b371-fd1f-4ebf-98d7-00a28d1f95d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-57a8b371-fd1f-4ebf-98d7-00a28d1f95d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-59d2ee08-d25e-4893-ba28-a1dc4690a0dc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59d2ee08-d25e-4893-ba28-a1dc4690a0dc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-59d2ee08-d25e-4893-ba28-a1dc4690a0dc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["def get_max_ap_for_timestamp(timestamp, data5_df):\n","    # Define the 6-hour window\n","    start_time = timestamp\n","    end_time = timestamp + pd.Timedelta(hours=6)\n","\n","    # Filter data5 for records within this window\n","    mask = (data5_df['Start'] >= start_time) & (data5_df['End'] <= end_time)\n","    relevant_data5 = data5_df[mask]\n","\n","    # Return the maximum ap value, or NaN if there are no records in the window\n","    return relevant_data5['ap'].max()\n","\n","# Apply the helper function to each Timestamp in data2 to get the max ap value\n","merged_data2['Max_ap'] = merged_data2['Timestamp'].apply(lambda x: get_max_ap_for_timestamp(x, data5))"],"metadata":{"id":"N_suLSoeOQ3S","executionInfo":{"status":"ok","timestamp":1696734163882,"user_tz":-330,"elapsed":3968,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["data2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"RWHBD9ErQJ3P","executionInfo":{"status":"ok","timestamp":1696734425259,"user_tz":-330,"elapsed":531,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"d60306a4-0d85-418e-8f0d-3f00d9dd72b3"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Timestamp  Source  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0    2022-10-31 12:00:00       1    4.96    3.41    5.55    1.45   -2.51   \n","1    2022-10-31 18:00:00       1    4.89    3.58    6.40   -0.49   -3.86   \n","2    2022-11-01 00:00:00       1    4.66    3.25    5.14   -3.18   -4.66   \n","3    2022-11-01 06:00:00       1    4.03    2.52    5.09   -0.49   -3.71   \n","4    2022-11-01 12:00:00       1    4.50    3.40    4.78   -3.32   -4.49   \n","...                  ...     ...     ...     ...     ...     ...     ...   \n","1359 2023-10-06 06:00:00       1    5.91    2.26    7.24    3.84   -3.54   \n","1360 2023-10-06 12:00:00       1    5.26    3.57    7.27    0.44   -2.72   \n","1361 2023-10-06 18:00:00       1    6.72    1.52    7.13   -0.94   -2.85   \n","1362 2023-10-07 00:00:00       1    5.60    4.75    6.00   -1.46   -2.84   \n","1363 2023-10-07 06:00:00       1    5.37    3.78    5.73   -1.08   -2.01   \n","\n","      Bx-max  By-med  By-min  ...  Dens-min  Dens-max  Speed-med  Speed-min  \\\n","0       3.03    2.80   -4.01  ...      6.08     10.79      479.4      457.2   \n","1       4.89    3.92    0.39  ...      6.29     11.21      471.7      450.3   \n","2       4.58    0.81   -1.46  ...      5.43     11.14      462.3      442.9   \n","3       3.32    1.84   -1.97  ...      4.47     10.04      462.1      427.5   \n","4       2.84    2.00   -1.37  ...      3.72      5.16      430.3      412.7   \n","...      ...     ...     ...  ...       ...       ...        ...        ...   \n","1359    5.29   -0.61   -3.98  ...      9.17     16.74      428.5      411.5   \n","1360    3.05    3.74   -5.47  ...      3.33     12.16      412.3      388.8   \n","1361    1.39    6.12   -1.57  ...      2.84     15.07      397.0      374.1   \n","1362   -0.70    4.62    2.32  ...      1.54      7.08      369.2      364.2   \n","1363    0.57    2.10   -0.48  ...      1.07      7.37      413.8      352.2   \n","\n","      Speed-max  Temp-med  Temp-min  Temp-max  Max_Kp       Date  \n","0         497.0    255620    119723    306989   3.333 2022-10-31  \n","1         502.4    246035    123225    291427   2.000 2022-10-31  \n","2         488.5    202911     98993    329715   1.000 2022-11-01  \n","3         483.6    222950     94413    307277   3.333 2022-11-01  \n","4         437.3     96466     65622    126397   2.000 2022-11-01  \n","...         ...       ...       ...       ...     ...        ...  \n","1359      443.2     65997     40556    128180   2.000 2023-10-06  \n","1360      424.9     54364     38827    129785   1.333 2023-10-06  \n","1361      415.0     45018      8092    108844   3.000 2023-10-06  \n","1362      375.4     11504      5000     22914     NaN 2023-10-07  \n","1363      477.2    185269     13068    339745     NaN 2023-10-07  \n","\n","[1364 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-5602a329-22fa-4225-afc8-67a58261ff4d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Source</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Dens-min</th>\n","      <th>Dens-max</th>\n","      <th>Speed-med</th>\n","      <th>Speed-min</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>Max_Kp</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-10-31 12:00:00</td>\n","      <td>1</td>\n","      <td>4.96</td>\n","      <td>3.41</td>\n","      <td>5.55</td>\n","      <td>1.45</td>\n","      <td>-2.51</td>\n","      <td>3.03</td>\n","      <td>2.80</td>\n","      <td>-4.01</td>\n","      <td>...</td>\n","      <td>6.08</td>\n","      <td>10.79</td>\n","      <td>479.4</td>\n","      <td>457.2</td>\n","      <td>497.0</td>\n","      <td>255620</td>\n","      <td>119723</td>\n","      <td>306989</td>\n","      <td>3.333</td>\n","      <td>2022-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-10-31 18:00:00</td>\n","      <td>1</td>\n","      <td>4.89</td>\n","      <td>3.58</td>\n","      <td>6.40</td>\n","      <td>-0.49</td>\n","      <td>-3.86</td>\n","      <td>4.89</td>\n","      <td>3.92</td>\n","      <td>0.39</td>\n","      <td>...</td>\n","      <td>6.29</td>\n","      <td>11.21</td>\n","      <td>471.7</td>\n","      <td>450.3</td>\n","      <td>502.4</td>\n","      <td>246035</td>\n","      <td>123225</td>\n","      <td>291427</td>\n","      <td>2.000</td>\n","      <td>2022-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-11-01 00:00:00</td>\n","      <td>1</td>\n","      <td>4.66</td>\n","      <td>3.25</td>\n","      <td>5.14</td>\n","      <td>-3.18</td>\n","      <td>-4.66</td>\n","      <td>4.58</td>\n","      <td>0.81</td>\n","      <td>-1.46</td>\n","      <td>...</td>\n","      <td>5.43</td>\n","      <td>11.14</td>\n","      <td>462.3</td>\n","      <td>442.9</td>\n","      <td>488.5</td>\n","      <td>202911</td>\n","      <td>98993</td>\n","      <td>329715</td>\n","      <td>1.000</td>\n","      <td>2022-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-11-01 06:00:00</td>\n","      <td>1</td>\n","      <td>4.03</td>\n","      <td>2.52</td>\n","      <td>5.09</td>\n","      <td>-0.49</td>\n","      <td>-3.71</td>\n","      <td>3.32</td>\n","      <td>1.84</td>\n","      <td>-1.97</td>\n","      <td>...</td>\n","      <td>4.47</td>\n","      <td>10.04</td>\n","      <td>462.1</td>\n","      <td>427.5</td>\n","      <td>483.6</td>\n","      <td>222950</td>\n","      <td>94413</td>\n","      <td>307277</td>\n","      <td>3.333</td>\n","      <td>2022-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-11-01 12:00:00</td>\n","      <td>1</td>\n","      <td>4.50</td>\n","      <td>3.40</td>\n","      <td>4.78</td>\n","      <td>-3.32</td>\n","      <td>-4.49</td>\n","      <td>2.84</td>\n","      <td>2.00</td>\n","      <td>-1.37</td>\n","      <td>...</td>\n","      <td>3.72</td>\n","      <td>5.16</td>\n","      <td>430.3</td>\n","      <td>412.7</td>\n","      <td>437.3</td>\n","      <td>96466</td>\n","      <td>65622</td>\n","      <td>126397</td>\n","      <td>2.000</td>\n","      <td>2022-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1359</th>\n","      <td>2023-10-06 06:00:00</td>\n","      <td>1</td>\n","      <td>5.91</td>\n","      <td>2.26</td>\n","      <td>7.24</td>\n","      <td>3.84</td>\n","      <td>-3.54</td>\n","      <td>5.29</td>\n","      <td>-0.61</td>\n","      <td>-3.98</td>\n","      <td>...</td>\n","      <td>9.17</td>\n","      <td>16.74</td>\n","      <td>428.5</td>\n","      <td>411.5</td>\n","      <td>443.2</td>\n","      <td>65997</td>\n","      <td>40556</td>\n","      <td>128180</td>\n","      <td>2.000</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>1360</th>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>1</td>\n","      <td>5.26</td>\n","      <td>3.57</td>\n","      <td>7.27</td>\n","      <td>0.44</td>\n","      <td>-2.72</td>\n","      <td>3.05</td>\n","      <td>3.74</td>\n","      <td>-5.47</td>\n","      <td>...</td>\n","      <td>3.33</td>\n","      <td>12.16</td>\n","      <td>412.3</td>\n","      <td>388.8</td>\n","      <td>424.9</td>\n","      <td>54364</td>\n","      <td>38827</td>\n","      <td>129785</td>\n","      <td>1.333</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>1361</th>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>1</td>\n","      <td>6.72</td>\n","      <td>1.52</td>\n","      <td>7.13</td>\n","      <td>-0.94</td>\n","      <td>-2.85</td>\n","      <td>1.39</td>\n","      <td>6.12</td>\n","      <td>-1.57</td>\n","      <td>...</td>\n","      <td>2.84</td>\n","      <td>15.07</td>\n","      <td>397.0</td>\n","      <td>374.1</td>\n","      <td>415.0</td>\n","      <td>45018</td>\n","      <td>8092</td>\n","      <td>108844</td>\n","      <td>3.000</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>1362</th>\n","      <td>2023-10-07 00:00:00</td>\n","      <td>1</td>\n","      <td>5.60</td>\n","      <td>4.75</td>\n","      <td>6.00</td>\n","      <td>-1.46</td>\n","      <td>-2.84</td>\n","      <td>-0.70</td>\n","      <td>4.62</td>\n","      <td>2.32</td>\n","      <td>...</td>\n","      <td>1.54</td>\n","      <td>7.08</td>\n","      <td>369.2</td>\n","      <td>364.2</td>\n","      <td>375.4</td>\n","      <td>11504</td>\n","      <td>5000</td>\n","      <td>22914</td>\n","      <td>NaN</td>\n","      <td>2023-10-07</td>\n","    </tr>\n","    <tr>\n","      <th>1363</th>\n","      <td>2023-10-07 06:00:00</td>\n","      <td>1</td>\n","      <td>5.37</td>\n","      <td>3.78</td>\n","      <td>5.73</td>\n","      <td>-1.08</td>\n","      <td>-2.01</td>\n","      <td>0.57</td>\n","      <td>2.10</td>\n","      <td>-0.48</td>\n","      <td>...</td>\n","      <td>1.07</td>\n","      <td>7.37</td>\n","      <td>413.8</td>\n","      <td>352.2</td>\n","      <td>477.2</td>\n","      <td>185269</td>\n","      <td>13068</td>\n","      <td>339745</td>\n","      <td>NaN</td>\n","      <td>2023-10-07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1364 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5602a329-22fa-4225-afc8-67a58261ff4d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5602a329-22fa-4225-afc8-67a58261ff4d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5602a329-22fa-4225-afc8-67a58261ff4d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3bf55f0c-b0d8-4b37-924c-4e9cf87cc184\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3bf55f0c-b0d8-4b37-924c-4e9cf87cc184')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3bf55f0c-b0d8-4b37-924c-4e9cf87cc184 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["# Replace NaN values in 'Kp' column with the day's median\n","merged_data2['Max_Kp'] = merged_data2.groupby(merged_data2['Date'])['Max_Kp'].transform(lambda x: x.fillna(x.median()))\n","\n","# Replace NaN values in 'Ap' column with the day's median\n","merged_data2['Max_ap'] = merged_data2.groupby(merged_data2['Date'])['Max_ap'].transform(lambda x: x.fillna(x.median()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rU69YL9MPl-X","executionInfo":{"status":"ok","timestamp":1696734495091,"user_tz":-330,"elapsed":785,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"f0873b4c-2d0f-4272-813f-3898f6399c61"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice\n","  return np.nanmean(a, axis, out=out, keepdims=keepdims)\n","/usr/local/lib/python3.10/dist-packages/numpy/lib/nanfunctions.py:1215: RuntimeWarning: Mean of empty slice\n","  return np.nanmean(a, axis, out=out, keepdims=keepdims)\n"]}]},{"cell_type":"code","source":["# Compute the medians for each day for 'Max_Kp' and 'Max_ap'\n","kp_day_medians = merged_data2.groupby(merged_data2['Date'])['Max_Kp'].transform('median')\n","ap_day_medians = merged_data2.groupby(merged_data2['Date'])['Max_ap'].transform('median')\n","\n","# Global medians for 'Max_Kp' and 'Max_ap'\n","kp_global_median = merged_data2['Max_Kp'].median()\n","ap_global_median = merged_data2['Max_ap'].median()\n","\n","# Replace NaN medians with the global median\n","kp_day_medians.fillna(kp_global_median, inplace=True)\n","ap_day_medians.fillna(ap_global_median, inplace=True)\n","\n","# Use the medians to fill NaN values in the original columns\n","merged_data2['Max_Kp'].fillna(kp_day_medians, inplace=True)\n","merged_data2['Max_ap'].fillna(ap_day_medians, inplace=True)"],"metadata":{"id":"5rkgtguiQcoz","executionInfo":{"status":"ok","timestamp":1696734594471,"user_tz":-330,"elapsed":774,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["merged_data2.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bAGw7yWFQ05s","executionInfo":{"status":"ok","timestamp":1696734639769,"user_tz":-330,"elapsed":839,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"9e7334ed-5103-4760-e3dd-32389af32438"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp    0\n","Source       0\n","Bt-med       0\n","Bt-min       0\n","Bt-max       0\n","Bx-med       0\n","Bx-min       0\n","Bx-max       0\n","By-med       0\n","By-min       0\n","By-max       0\n","Bz-med       0\n","Bz-min       0\n","Bz-max       0\n","Phi-mean     0\n","Phi-min      0\n","Phi-max      0\n","Theta-med    0\n","Theta-min    0\n","Theta-max    0\n","Dens-med     0\n","Dens-min     0\n","Dens-max     0\n","Speed-med    0\n","Speed-min    0\n","Speed-max    0\n","Temp-med     0\n","Temp-min     0\n","Temp-max     0\n","Max_Kp       0\n","Date         0\n","SN           2\n","F10.7obs     2\n","F10.7adj     2\n","Max_ap       0\n","dtype: int64"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["# Reorder the columns\n","ordered_columns = [\n","    'Timestamp', 'Date',\n","    'Bt-med', 'Bt-min', 'Bt-max',\n","    'Bx-med', 'Bx-min', 'Bx-max',\n","    'By-med', 'By-min', 'By-max',\n","    'Bz-med', 'Bz-min', 'Bz-max',\n","    'Phi-mean', 'Phi-min', 'Phi-max',\n","    'Theta-med', 'Theta-min', 'Theta-max',\n","    'Dens-med', 'Dens-min', 'Dens-max',\n","    'Speed-med', 'Speed-min', 'Speed-max',\n","    'Temp-med', 'Temp-min', 'Temp-max',\n","    'SN', 'F10.7obs', 'F10.7adj',\n","    'Source','Max_Kp', 'Max_ap'\n","]\n","\n","merged_data2 = merged_data2[ordered_columns]\n","\n","# Save the ordered dataframe to a CSV file\n","merged_data2.to_csv('/content/drive/MyDrive/NASA Hackathon/Datasets/Final Datasets/ordered_dataset.csv', index=False)"],"metadata":{"id":"2kOrDtKbQ60k","executionInfo":{"status":"ok","timestamp":1696734828048,"user_tz":-330,"elapsed":4,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["merged_data2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"sEo-1HbNRt8d","executionInfo":{"status":"ok","timestamp":1696734838035,"user_tz":-330,"elapsed":507,"user":{"displayName":"hardik inani","userId":"03004455123166050991"}},"outputId":"ce6e500e-ec54-4293-f99e-94b1f36f7939"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Timestamp       Date  Bt-med  Bt-min  Bt-max  Bx-med  Bx-min  \\\n","0    2022-10-31 12:00:00 2022-10-31    4.96    3.41    5.55    1.45   -2.51   \n","1    2022-10-31 18:00:00 2022-10-31    4.89    3.58    6.40   -0.49   -3.86   \n","2    2022-11-01 00:00:00 2022-11-01    4.66    3.25    5.14   -3.18   -4.66   \n","3    2022-11-01 06:00:00 2022-11-01    4.03    2.52    5.09   -0.49   -3.71   \n","4    2022-11-01 12:00:00 2022-11-01    4.50    3.40    4.78   -3.32   -4.49   \n","...                  ...        ...     ...     ...     ...     ...     ...   \n","1359 2023-10-06 06:00:00 2023-10-06    5.91    2.26    7.24    3.84   -3.54   \n","1360 2023-10-06 12:00:00 2023-10-06    5.26    3.57    7.27    0.44   -2.72   \n","1361 2023-10-06 18:00:00 2023-10-06    6.72    1.52    7.13   -0.94   -2.85   \n","1362 2023-10-07 00:00:00 2023-10-07    5.60    4.75    6.00   -1.46   -2.84   \n","1363 2023-10-07 06:00:00 2023-10-07    5.37    3.78    5.73   -1.08   -2.01   \n","\n","      Bx-max  By-med  By-min  ...  Speed-max  Temp-med  Temp-min  Temp-max  \\\n","0       3.03    2.80   -4.01  ...      497.0    255620    119723    306989   \n","1       4.89    3.92    0.39  ...      502.4    246035    123225    291427   \n","2       4.58    0.81   -1.46  ...      488.5    202911     98993    329715   \n","3       3.32    1.84   -1.97  ...      483.6    222950     94413    307277   \n","4       2.84    2.00   -1.37  ...      437.3     96466     65622    126397   \n","...      ...     ...     ...  ...        ...       ...       ...       ...   \n","1359    5.29   -0.61   -3.98  ...      443.2     65997     40556    128180   \n","1360    3.05    3.74   -5.47  ...      424.9     54364     38827    129785   \n","1361    1.39    6.12   -1.57  ...      415.0     45018      8092    108844   \n","1362   -0.70    4.62    2.32  ...      375.4     11504      5000     22914   \n","1363    0.57    2.10   -0.48  ...      477.2    185269     13068    339745   \n","\n","         SN  F10.7obs  F10.7adj  Source  Max_Kp  Max_ap  \n","0      63.0     127.9     126.0       1   3.333    18.0  \n","1      63.0     127.9     126.0       1   2.000     7.0  \n","2      85.0     128.1     126.1       1   1.000     4.0  \n","3      85.0     128.1     126.1       1   3.333    18.0  \n","4      85.0     128.1     126.1       1   2.000     7.0  \n","...     ...       ...       ...     ...     ...     ...  \n","1359  152.0     155.3     155.3       1   2.000     7.0  \n","1360  152.0     155.3     155.3       1   1.333     5.0  \n","1361  152.0     155.3     155.3       1   3.000    15.0  \n","1362    NaN       NaN       NaN       1   2.333     9.0  \n","1363    NaN       NaN       NaN       1   2.333     9.0  \n","\n","[1364 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-79e8ff44-63cf-476e-b234-877ec29fcfe0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Date</th>\n","      <th>Bt-med</th>\n","      <th>Bt-min</th>\n","      <th>Bt-max</th>\n","      <th>Bx-med</th>\n","      <th>Bx-min</th>\n","      <th>Bx-max</th>\n","      <th>By-med</th>\n","      <th>By-min</th>\n","      <th>...</th>\n","      <th>Speed-max</th>\n","      <th>Temp-med</th>\n","      <th>Temp-min</th>\n","      <th>Temp-max</th>\n","      <th>SN</th>\n","      <th>F10.7obs</th>\n","      <th>F10.7adj</th>\n","      <th>Source</th>\n","      <th>Max_Kp</th>\n","      <th>Max_ap</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-10-31 12:00:00</td>\n","      <td>2022-10-31</td>\n","      <td>4.96</td>\n","      <td>3.41</td>\n","      <td>5.55</td>\n","      <td>1.45</td>\n","      <td>-2.51</td>\n","      <td>3.03</td>\n","      <td>2.80</td>\n","      <td>-4.01</td>\n","      <td>...</td>\n","      <td>497.0</td>\n","      <td>255620</td>\n","      <td>119723</td>\n","      <td>306989</td>\n","      <td>63.0</td>\n","      <td>127.9</td>\n","      <td>126.0</td>\n","      <td>1</td>\n","      <td>3.333</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-10-31 18:00:00</td>\n","      <td>2022-10-31</td>\n","      <td>4.89</td>\n","      <td>3.58</td>\n","      <td>6.40</td>\n","      <td>-0.49</td>\n","      <td>-3.86</td>\n","      <td>4.89</td>\n","      <td>3.92</td>\n","      <td>0.39</td>\n","      <td>...</td>\n","      <td>502.4</td>\n","      <td>246035</td>\n","      <td>123225</td>\n","      <td>291427</td>\n","      <td>63.0</td>\n","      <td>127.9</td>\n","      <td>126.0</td>\n","      <td>1</td>\n","      <td>2.000</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-11-01 00:00:00</td>\n","      <td>2022-11-01</td>\n","      <td>4.66</td>\n","      <td>3.25</td>\n","      <td>5.14</td>\n","      <td>-3.18</td>\n","      <td>-4.66</td>\n","      <td>4.58</td>\n","      <td>0.81</td>\n","      <td>-1.46</td>\n","      <td>...</td>\n","      <td>488.5</td>\n","      <td>202911</td>\n","      <td>98993</td>\n","      <td>329715</td>\n","      <td>85.0</td>\n","      <td>128.1</td>\n","      <td>126.1</td>\n","      <td>1</td>\n","      <td>1.000</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-11-01 06:00:00</td>\n","      <td>2022-11-01</td>\n","      <td>4.03</td>\n","      <td>2.52</td>\n","      <td>5.09</td>\n","      <td>-0.49</td>\n","      <td>-3.71</td>\n","      <td>3.32</td>\n","      <td>1.84</td>\n","      <td>-1.97</td>\n","      <td>...</td>\n","      <td>483.6</td>\n","      <td>222950</td>\n","      <td>94413</td>\n","      <td>307277</td>\n","      <td>85.0</td>\n","      <td>128.1</td>\n","      <td>126.1</td>\n","      <td>1</td>\n","      <td>3.333</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-11-01 12:00:00</td>\n","      <td>2022-11-01</td>\n","      <td>4.50</td>\n","      <td>3.40</td>\n","      <td>4.78</td>\n","      <td>-3.32</td>\n","      <td>-4.49</td>\n","      <td>2.84</td>\n","      <td>2.00</td>\n","      <td>-1.37</td>\n","      <td>...</td>\n","      <td>437.3</td>\n","      <td>96466</td>\n","      <td>65622</td>\n","      <td>126397</td>\n","      <td>85.0</td>\n","      <td>128.1</td>\n","      <td>126.1</td>\n","      <td>1</td>\n","      <td>2.000</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1359</th>\n","      <td>2023-10-06 06:00:00</td>\n","      <td>2023-10-06</td>\n","      <td>5.91</td>\n","      <td>2.26</td>\n","      <td>7.24</td>\n","      <td>3.84</td>\n","      <td>-3.54</td>\n","      <td>5.29</td>\n","      <td>-0.61</td>\n","      <td>-3.98</td>\n","      <td>...</td>\n","      <td>443.2</td>\n","      <td>65997</td>\n","      <td>40556</td>\n","      <td>128180</td>\n","      <td>152.0</td>\n","      <td>155.3</td>\n","      <td>155.3</td>\n","      <td>1</td>\n","      <td>2.000</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>1360</th>\n","      <td>2023-10-06 12:00:00</td>\n","      <td>2023-10-06</td>\n","      <td>5.26</td>\n","      <td>3.57</td>\n","      <td>7.27</td>\n","      <td>0.44</td>\n","      <td>-2.72</td>\n","      <td>3.05</td>\n","      <td>3.74</td>\n","      <td>-5.47</td>\n","      <td>...</td>\n","      <td>424.9</td>\n","      <td>54364</td>\n","      <td>38827</td>\n","      <td>129785</td>\n","      <td>152.0</td>\n","      <td>155.3</td>\n","      <td>155.3</td>\n","      <td>1</td>\n","      <td>1.333</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1361</th>\n","      <td>2023-10-06 18:00:00</td>\n","      <td>2023-10-06</td>\n","      <td>6.72</td>\n","      <td>1.52</td>\n","      <td>7.13</td>\n","      <td>-0.94</td>\n","      <td>-2.85</td>\n","      <td>1.39</td>\n","      <td>6.12</td>\n","      <td>-1.57</td>\n","      <td>...</td>\n","      <td>415.0</td>\n","      <td>45018</td>\n","      <td>8092</td>\n","      <td>108844</td>\n","      <td>152.0</td>\n","      <td>155.3</td>\n","      <td>155.3</td>\n","      <td>1</td>\n","      <td>3.000</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>1362</th>\n","      <td>2023-10-07 00:00:00</td>\n","      <td>2023-10-07</td>\n","      <td>5.60</td>\n","      <td>4.75</td>\n","      <td>6.00</td>\n","      <td>-1.46</td>\n","      <td>-2.84</td>\n","      <td>-0.70</td>\n","      <td>4.62</td>\n","      <td>2.32</td>\n","      <td>...</td>\n","      <td>375.4</td>\n","      <td>11504</td>\n","      <td>5000</td>\n","      <td>22914</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2.333</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>1363</th>\n","      <td>2023-10-07 06:00:00</td>\n","      <td>2023-10-07</td>\n","      <td>5.37</td>\n","      <td>3.78</td>\n","      <td>5.73</td>\n","      <td>-1.08</td>\n","      <td>-2.01</td>\n","      <td>0.57</td>\n","      <td>2.10</td>\n","      <td>-0.48</td>\n","      <td>...</td>\n","      <td>477.2</td>\n","      <td>185269</td>\n","      <td>13068</td>\n","      <td>339745</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2.333</td>\n","      <td>9.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1364 rows Ã— 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79e8ff44-63cf-476e-b234-877ec29fcfe0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-79e8ff44-63cf-476e-b234-877ec29fcfe0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-79e8ff44-63cf-476e-b234-877ec29fcfe0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3704ce85-bde9-46f4-95a1-192f7e2f2450\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3704ce85-bde9-46f4-95a1-192f7e2f2450')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3704ce85-bde9-46f4-95a1-192f7e2f2450 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54}]}]}